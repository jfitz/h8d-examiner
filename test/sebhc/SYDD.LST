                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page    1

                        00001   *** 	SYDD - System Device Driver
                        00002   *	Author: JG Letwin, Oct 1977
                        00003   *	Transcribed by Bob Groh August 2009
                        00004   *	SYDD is a system device driver for H17mini-floppy
                        00005   *	This file is the complete transcription of the entire orignal SYDD listing file (in  pdf format)
                        00006
                        00007   *	Editor: Notepad++
                        00008   *	Format: pure text format with TAB delimiters
                        00009   *	Revision Table
                        00010   *	Version	Date	Author	Description
                        00011   *	1.0	8/12/09	Bob Groh	Completed and combined whole listing
                        00012   *	
                        00013   *
                        00014
                        00015   ****	Assembly Constants
   000.376              00016   MI.CPI	EQU	376Q	CPI Instruction
   000.012              00017   ERPTCNT	EQU	10	Soft Error Retry Count
                        00018
                        00019   *	XTEXT	MTR
                        00020   *	MTR - PAM/8 EQUIVALENCES.
                        00021   *
                        00022   *	THIS DECK CONTAINS SYMBOLIC DEFINITIONS USED TO
                        00023   *	MAKE USE OF THE PAM/8 CODE AND CONTROL BYTES.



                        00025   **	IO PORTS
                        00026
   000.360              00027   IP.PAD	EQU	360Q		PAD INPUT PORT
   000.360              00028   OP.CTL	EQU	360Q		CONTROL OUTPUT PORT
   000.360              00029   OP.DIG	EQU	360Q		DIGIT SELECT OUTPUT PORT
   000.361              00030   OP.SEG	EQU	361Q		SEGMENT SELECT OUTPUT PORT
                        00031
                        00032   **	FRONT PANEL CONTROL BITS.
                        00033
   000.020              00034   CB.SSI	EQU	00010000B	SINGLE STEP INTERRUPT
   000.040              00035   CB.MTL	EQU	00100000B	MONITOR LIGHT
   000.100              00036   CB.CLI	EQU	01000000B	CLOCK INTERRUPT ENABLE
   000.200              00037   CB.SPK	EQU	10000000B	SPEAKER ENABLE
                        00038   **	MONITOR MODE FLAGS.
                        00039
   000.000              00040   DM.MR	EQU	0		MEMORY READ
   000.001              00041   DM.MW	EQU	1		MEMORY WRITE
   000.002              00042   DM.RR	EQU	2		REGISTER READ
   000.003              00043   DM.RW	EQU	3		REGISTER WRITE
                        00044   **	USER OPTION BITS.
                        00045   *
                        00046   *	THESE BITS ARE SET IN CELL .MFLAG.
                        00047
   000.200              00048   UO.HLT	EQU	10000000B	DISABLE HALT PROCESSING
   000.100              00049   UO.NFR	EQU	CB.CLI		NO REFRESH OF FRONT PANEL
   000.002              00050   UO.DDU	EQU	00000010B	DISABLE DISPLAY UPDATE
   000.001              00051   UO.CLK	EQU	00000001B	ALLOW PRIVATE INTERRUPT PROCESSING
                        00052
                        00053   **	MONITOR IDENTIFICATION FLAGS
                        00054   *
                        00055   *	THESE BYTES IDENTIFY THE ROM MONITOR.
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page    2

                        00056   *	THEY ARE THE VARIOUS VALUES OF LOCATION .IDENT
                        00057
   000.021              00058   M.PAM8	EQU	021Q		'LXI' INSTRUCTION AT 000.000 IN PAM-8
   000.303              00059   M.FOX	EQU	303Q		'JMP' INSTRUCTION AT 000.000 IN FOX ROM
                        00060   **	ROUTINE ENTRY POINTS.
                        00061   *
                        00062
   000.000              00063   .IDENT	EQU	0000A		IDENTIFICATION LOCATION
   000.053              00064   .DLY	EQU	0053A		DELAY
   001.267              00065   .LOAD	EQU	1267A		TAPE LOAD
   001.374              00066   .DUMP	EQU	1374A		TAPE DUMP
   002.136              00067   .ALARM	EQU	2136A		ALARM ROUTINE
   002.140              00068   .HORN	EQU	2140A		HORN
   002.172              00069   .CTC	EQU	2172A		CHECK TAPE CHECKSUM
   002.205              00070   .TPERR	EQU	2205A		TAPE ERROR ROUTINE
   002.264              00071   .PCHL	EQU	2264A		PCHL INSTRUCTION
   002.265              00072   .SRS	EQU	2265A		SCAN RECORD START
   002.325              00073   .RNP	EQU	2325A		READ NEXT PAIR
   002.331              00074   .RNB	EQU	2331A		READ NEXT BYTE
   002.347              00075   .CRC	EQU	2347A		CRC-16 CALCULATOR
   003.017              00076   .WNP	EQU	3017A		WRITE NEXT PAIR
   003.024              00077   .WNB	EQU	3024A		WRITE NEXT BYTE
   003.122              00078   .DOD	EQU	3122A		DECODE FOR OCTAL DISPLAY
   003.260              00079   .RCK	EQU	3260A		READ CONSOLE KEYSET
   003.356              00080   .DODA	EQU	3356A		SEGMENT CODE TABLE
                        00081
                        00082   **	RAM CELLS USED BY H8MTR.
                        00083   *
                        00084
   040.000              00085   .START	EQU	40000A		START DUMP ADDRESS
   040.002              00086   .IOWRK	EQU	40002A		IN OR OUT INSTRUCTION
   040.005              00087   .REGI	EQU	40005A		DISPLAYED REGISTER INDEX
   040.006              00088   .DSPROT EQU	40006A		PERIOD FLAG BYTE
   040.007              00089   .DSPMOD	EQU	40007A		DISPLAY MODE
   040.010              00090   .MFLAG	EQU	40010A		USER OPTION BYTE
   040.011              00091   .CTLFLG EQU	40011A		PANEL CONTROL BYTE
   040.013              00092   .ALEDS	EQU	40013A		ABUSS LEDS
   040.021              00093   .DLEDS	EQU	40021A		DBUSS LEDS
   040.024              00094   .ABUSS	EQU	40024A		ABUSS REGISTER
   040.027              00095   .CRCSUM EQU	40027A		CRCSUM WORD
   040.031              00096   .TPERRX EQU	40031A		TAPE ERROR EXIT VECTOR
   040.033              00097   .TICCNT EQU	40033A		CLOCK TICK COUNTER
   040.035              00098   .REGPTR EQU	40035A		REGISTER POINTER
   040.037              00099   .UIVEC	EQU	40037A		USER INTERRUPT VECTORS
                        00100
                        00101
                        00102   *	XTEXT	U8251
                        00103   *	XTEXT	ASCII
                        00104   	LON	C
                        00105   *	XTEXT 	HOSEDEF
                        00106
                        00107   **	HOSDEF - Define HOS Parameter
                        00108   *
   000.377              00109   SYSCALL	EQU	377Q	Syscall Instruction
                        00110
   000.000              00111   	ORG	0
                        00112   *	Resident Functions
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page    3

   000.000              00113   .EXIT	DS	1	Exit (must be first)
   000.001              00114   .SCIN	DS	1	SCIN (serial input)
   000.002              00115   .SCOUT	DS	1	SCOUT (serial output)
   000.003              00116   .PRINT	DS	1	PRINT
   000.004              00117   .READ	DS	1	READ
   000.005              00118   .WRITE	DS	1	WRITE
   000.006              00119   .CONSL	DS	1	Set/clear console options
   000.007              00120   .CLRCO	DS	1	Clear console buffer
   000.010              00121   .SYSRES	DS	1	Preceeding functions are resident
                        00122
                        00123   *	HOSOVL.SYS	Functions
   000.040              00124   	ORG	40A
   000.040              00125   .LINK	DS	1	LINK (must be first)
   000.041              00126   .CTLC	DS	1	CTL-C
   000.042              00127   .OPENR	DS	1	Open Read
   000.043              00128   .OPENW	DS	1	Open Write
   000.044              00129   .OPENU	DS	1	Open Update(?)
   000.045              00130   .OPENC	DS	1	Open Channel (?)
   000.046              00131   .CLOSE	DS	1	Close
   000.047              00132   .POSIT	DS	1	Position
   000.050              00133   .DELET	DS	1	Delete
   000.051              00134   .RENAM	DS	1	Rename
   000.052              00135   .SETTP	DS	1	Set top
   000.053              00136   .DECODE	DS	1	Name decode
   000.054              00137   .NAME	DS	1	Get file name from channel
   000.055              00138   .CLEAR	DS	1	Clear channel
   000.056              00139   .CLEARA	DS	1	Clear all channels
   000.057              00140   .ERROR	DS	1	Look up error
   000.060              00141   .CHFLG	DS	1	Change flags
   000.061              00142   .DISMT	DS	1	Flag system disk dismounted
                        00143   *	XTEXT	DIRDEF
                        00144
                        00145   ** 	Directory Entry Format
   000.000              00146   	ORG	0
                        00147
   000.377              00148   UP.EMP	EQU	377Q	Flags Entry Empty
   000.376              00149   UP.CLR	EQU	376Q	Flags Entry empty, rest of dire also clear
                        00150
   000.000              00151   DIR.NAM	DS	8	Space for file Name
   000.010              00152   DIR.EXT	DS	3	Space for file Extension
   000.013              00153   DIR.PRO	DS	1	Project
   000.014              00154   DIR.VER	DS	1	Version
   000.015              00155   DIRIDL	EQU	*	File identification length
                        00156
   000.015              00157   DIR.CLU	DS	1	Cluster factor
   000.016              00158   DIR.FLG	DS	1	Flags
   000.017              00159   	DS	1	Reserved
   000.020              00160   DIR.FGN	DS	1	First group number
   000.021              00161   DIR.LGN	DS	1	Last group number
   000.022              00162   DIR.CRD	DS	2	Creation Date
   000.024              00163   DIR.ALD	DS	2	Last alteration date
   000.026              00164   DIRELEN	EQU	*	Directory Entry length
                        00165   *	XTEXT	DEVDEF
                        00166
                        00167   **	Device Table Entrys
   000.000              00168   	ORG	0
   000.000              00169   DEV.NAM	DS	2	Device Name
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page    4

   000.002              00170   DEV.RES	DS	1	Driver residence code
   000.001              00171   DR.IM	EQU	00000001B	Driver in memory
   000.002              00172   DR.PR	EQU	00000010B	Driver permanently resident
                        00173
   000.003              00174   DEV.JMP	DS	1	Jump to processor
   000.004              00175   DEV.DDA	DS	2	Driver address
   000.006              00176   DEV.FLG	DS	1	Flag Byte
   000.001              00177   DT.DD	EQU	00000001B	Directory Device
   000.002              00178   DT.CR	EQU	00000010B	Capable of READ operation
   000.004              00179   DT.CW	EQU	00000100B	Capable of WRITE operation
                        00180
   000.007              00181   DEV.GRT	DS	2	Address of group reservation table (if directory)
   000.011              00182   DEV.SPG	DS	1	Sectors per group this device
   000.012              00183   DEV.MUM	DS	0	Mounted unit mask
   000.012              00184   DEV.MNU	DS	1	Maximum number of units
   000.013              00185   DEV.DVL	DS	2	Driver byte length
   000.015              00186   DEV.DVG	DS	1	Driver routine group address
   000.016              00187   DEV.DIR	DS	2	Directory first sector address
   000.020              00188   DEV.GTS	DS	2	GRT sector number
                        00189
   000.022              00190   DEVELEN	EQU	*	Device tble entry length
                        00191   *	XTEXT	H17DEF
                        00192
                        00193   **	H17 Control Information
   000.177              00194   DP.DC	EQU	07FH	Disk control port
   000.001              00195   DF.HD	EQU	00000001B	Hole Detect
   000.002              00196   DF.T0	EQU	00000010B	Track 0 detect
   000.004              00197   DF.WP	EQU	00000100B	Write protect
   000.010              00198   DF.SD	EQU	00001000B	Sync Detect
                        00199
   000.001              00200   DF.WG	EQU	00000001B	Write gate enable
   000.002              00201   DF.DSO	EQU	00000010B	Drive select 0
   000.004              00202   DF.DS1	EQU	00000100B	Drive select 1
   000.010              00203   DF.DS2	EQU	00001000B	Drive select 2
                        00204
   000.020              00205   DF.MO	EQU	00010000B	Motor On (both drives)
   000.040              00206   DF.DI	EQU	00100000B	Direction (0 = out)
   000.100              00207   DF.ST	EQU	01000000B	Step command (active high)
   000.200              00208   DF.WR	EQU	10000000B	Write enable RAM
                        00209
                        00210   **	Disk UART ports and control flags
   000.174              00211   UP.DP	EQU	07CH	Data port
   000.175              00212   UP.FC	EQU	07DH	Fill Character
   000.175              00213   UP.ST	EQU	07DH	Status flags
   000.176              00214   UP.SC	EQU	07EH	Syn character (output)
   000.176              00215   UP.SR	EQU	07EH	Sync reset (input)
                        00216
   000.001              00217   UF.RDA	EQU	00000001B	Receive data available
   000.002              00218   UF.ROR	EQU	00000010B	Receiver overrun
   000.004              00219   UF.RPE	EQU	00000100B	Receiver parity error
   000.100              00220   UF.FCT	EQU	01000000B	Fill character transmitted
   000.200              00221   UF.TBM	EQU	10000000B	Transmitter buffer empty
                        00222
                        00223   ** 	Character Definitions
   000.375              00224   C.DSYN	EQU	0FDH	Prefix sync character
                        00225   *	XTEXT	ECDEF
                        00226
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page    5

                        00227   **	Error Code Definitions
   000.000              00228   	ORG	0
   000.000              00229   	DS	1	No error #0
   000.001              00230   EC.EOF	DS	1	End of file
   000.002              00231   EC.EOM	DS	1	End of media
   000.003              00232   EC.ILC	DS	1	Illegal SYSCALL code
   000.004              00233   EC.CNA	DS	1	Channel not available
   000.005              00234   EC.DNS	DS	1	Device not suitable
   000.006              00235   EC.IDN	DS	1	Illegal device name
   000.007              00236   EC.IFN	DS	1	Illegal file name
   000.010              00237   EC.NRD	DS	1	No room dor device driver
   000.011              00238   EC.FNO	DS	1	channel not open
   000.012              00239   EC.ILR	DS	1	Illegal request
   000.013              00240   EC.FUC	DS	1	File name conflict
   000.014              00241   EC.FNF	DS	1	File name not found
   000.015              00242   EC.UND	DS	1	Unknown device
   000.016              00243   EC.ICN	DS	1	Illegal channel number
   000.017              00244   EC.DIF	DS	1	Directory full
   000.020              00245   EC.IFC	DS	1	Illegal file contents
   000.021              00246   EC.NEM	DS	1	Not enough memory
   000.022              00247   EC.RF	DS	1	Read failure
   000.023              00248   EC.WF	DS	1	Write failure
   000.024              00249   EC.WPV	DS	1	Write protection violation
   000.025              00250   EC.WP	DS	1	disk write protected
   000.026              00251   EC.FAP	DS	1	file already present
   000.027              00252   EC.DDA	DS	1	device driver abort
   000.030              00253   EC.FL	DS	1	file locked
   000.031              00254   EC.FAO	DS	1	file already open
   000.032              00255   EC.IS	DS	1	illegal switch
   000.033              00256   EC.UUN	DS	1	unknown unit number
   000.034              00257   EC.FNR	DS	1	file name required
   000.035              00258   EC.DIW	DS	1	device is not readable
   000.036              00259   EC.UNA	DS	1	unit not available
   000.037              00260   EC.ILV	DS	1	illegal value
   000.040              00261   EC.ILO	DS	1	illegal option
                        00262   *	XTEXT	DDDEF	
                        00263
                        00264   **	Device driver communication flags
                        00265   *
   000.000              00266   	ORG	0
   000.000              00267   DC.REA	DS	1	Read
   000.001              00268   DC.WRI	DS	1	Write
   000.002              00269   DC.RER	DS	1	Read Regardless
   000.003              00270   DC.OPR	DS	1	Open for read
   000.004              00271   DC.OPW	DS	1	Open for write
   000.005              00272   DC.OPU	DS	1	Open for update
   000.006              00273   DC.CLO	DS	1	Close
   000.007              00274   DC.ABT	DS	1	Abort
   000.010              00275   DC.MOU	DS	1	Mount Device
                        00276   *	XTEXT	PICDEF
                        00277
                        00278   **	PIC Format equivalences
                        00279   *
   000.000              00280   	ORG	0
   000.000              00281   PIC.ID	DS	1	377Q = Binary file flag
   000.001              00282   	DS	1	File type (FT.PIC)
   000.002              00283   PIC.LEN	DS	2	Length of entire record
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page    6

   000.004              00284   PIC.PTR	DS	2	Index of start of PIC table
   000.006              00285   PIC.COD	DS	0	Code starts here
                        00286   *	XTEXT	HOSEQU
                        00287
                        00288   **	HDOS System Equivalences
                        00289   *
   024.000              00290   S.GRT	EQU	24000A	System area for GRT0
   025.000              00291   S.GRT1	EQU	25000A	System area for GRT1
   026.000              00292   SECSCR	EQU	26000A	System 512 byte scratch area
   030.000              00293   ROMBOOT	EQU	30000A	ROM boot entry
                        00294
   040.100              00295   	ORG	40100A	Free Space From PAM-8
   040.100              00296   	DS	8	Jump to system exit
   040.110              00297   D.CON	DS	16	Disk constants
   040.130              00298   SYDD	EQU	*	System disk entry point
   040.130              00299   D.VEC	DS	24*3	System ROM entry vectors
   040.240              00300   D.RAM	DS	31	System ROM Work area
   040.277              00301   S.VAL	DS	38	System values
   040.345              00302   S.INT	DS	113	SYSTEM INTERNAL WORK AREA
   041.126              00303   	DS	16	
   041.146              00304   S.SOVR	DS	2	Stack overflow warning
   041.150              00305   	DS	42200A-*	System stack
   001.032              00306   STACKL	EQU	*-S.SOVR	Stack size
   042.200              00307   STACK	EQU	*	LWA+1 system stack
   042.200              00308   USERFWA	EQU	*	User FWA
                        00309   *	XTEXT	EDCON
                        00310
                        00311   **	D.CON detailed equivalences
                        00312   *	HOSEQU  must be modified when this table is modified
                        00313
   040.110              00314   	ORG	D.CON
   040.110              00315   D.XITA	DS	2	See system ROM for description
   040.112              00316   D.WRITA	DS	1	
   040.113              00317   D.WRITB	DS	1	
   040.114              00318   D.WRITC	DS	1	
   040.115              00319   D.MAIA	DS	1	
   040.116              00320   D.LPSA	DS	1	
   040.117              00321   D.SDPA	DS	1	
   040.120              00322   D.SDPB	DS	1	
   040.121              00323   D.STSA	DS	1	
   040.122              00324   D.STSB	DS	1	
   040.123              00325   D.WHDA	DS	1	
   040.124              00326   D.WNHA	DS	1	
   040.125              00327   D.WSCA	DS	1	
   040.126              00328   D.ERTS	DS	2	Track and sector of last disk errors
                        00329   *	XTEXT	EDVEC
                        00330
                        00331
                        00332   **	Jump vectors for ROM code
                        00333   *	See disk rom for addresses
                        00334   *	HOSEQU must be altered when this table is altered
                        00335
   040.130              00336   	ORG	D.VEC
   040.130              00337   D.SYDD	DS	3	JMP   R.SYDD (Must be first)
   040.133              00338   D.MOUNT	DS	3	JMP   R.MOUNT
   040.136              00339   D.XOK	DS	3	JMP   R.XOK
   040.141              00340   D.ABORT	DS	3	JMP   R.ABORT
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page    7

   040.144              00341   D.XIT	DS	3	JMP   R.XIT
   040.147              00342   D.READ	DS	3	JMP   R.READ
   040.152              00343   D.READR	DS	3	JMP   R.READR
   040.155              00344   D.WRITE	DS	3	JMP   R.WRITE
   040.160              00345   D.CDE	DS	3	JMP   R.CDE
   040.163              00346   D.DTS	DS	3	JMP   R.DTS
   040.166              00347   D.SDT	DS	3	JMP   R.SDT
   040.171              00348   D.MAI	DS	3	JMP   R.MAI
   040.174              00349   D.MAO	DS	3	JMP   R.MAO
   040.177              00350   D.LPS	DS	3	JMP   R.LPS
   040.202              00351   D.RDB	DS	3	JMP   R.RDB
   040.205              00352   D.SDP	DS	3	JMP   R.SDP
   040.210              00353   D.STS	DS	3	JMP   R.STS
   040.213              00354   D.STZ	DS	3	JMP   R.STZ
   040.216              00355   D.UDLY	DS	3	JMP   R.UDLY
   040.221              00356   D.WSC	DS	3	JMP   R.WSC
   040.224              00357   D.WSP	DS	3	JMP   R.WSP
   040.227              00358   D.WNB	DS	3	JMP   R.WNB
   040.232              00359   D.ERRT	DS	3	JMP   R.ERRT
   040.235              00360   D.DLY	DS	3	JMP   R.DLY
                        00361   *	XTEXT	EDRAM
                        00362
                        00363   **	EDRAM - disk RAM workarea definition
                        00364   *	Zeroed on boot up
                        00365   *	HOSEQU must be changed i this table is changed
                        00366   	
   040.240              00367   	ORG	D.RAM
   040.240              00368   D.TT	DS	1	Target Track (current operation)
   040.241              00369   D.TS	DS	1	Target Sector (current operation)
   040.242              00370   D.DVCTL	DS	1	Device Control byte
   040.243              00371   D.DLYMO	DS	1	Motor on delay count
   040.244              00372   D.DLYHS	DS	1	Head settle delay counter
                        00373
   040.245              00374   D.TRKPT	DS	2	Address in D.DRVTB for track number
   040.247              00375   D.VOLPT	DS	2	Address in D.DRVTB for volume number
   040.251              00376   D.DRVTB	DS	2*4	Track number and volume number for 4 drives
   040.261              00377   D.HECNT	DS	1	Hard error count
   040.262              00378   D.SECNT	DS	2	Soft error count
   040.264              00379   D.OECNT	DS	1	Operation error count
                        00380
                        00381   *	Global Disk error counters
   040.265              00382   D.ERR	DS	0	Beginning of error block
   040.265              00383   D.E.MDS	DS	1	Missing data sync
   040.266              00384   D.E.HSY	DS	1	Missing reader sync
   040.267              00385   D.E.CHK	DS	1	Data checksum
   040.270              00386   D.E.HCK	DS	1	Header checksum
   040.271              00387   D.E.VOL	DS	1	Wrong volume number
   040.272              00388   D.E.TRK	DS	1	Bad Track seek
   040.273              00389   D.ERRL	DS	0	Limit of error counters
                        00390
                        00391   *	I/O Operation counts
   040.273              00392   D.OPR	DS	2	
   040.275              00393   D.OPW	DS	2	
   000.037              00394   D.RAML	EQU	*-D.RAM	
                        00395   *	XTEXT	ESVAL
                        00396
                        00397   **	S.VAL  -- System value definitions
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page    8

                        00398   *	These values are set and maintained by the system
                        00399   *	HOSEQU must be modified when this is modified
                        00400
   040.277              00401   	ORG	S.VAL
   040.277              00402   S.DATE	DS	9	System Date (in ASCII)
   040.310              00403   S.DATC	DS	2	Coded date
   040.312              00404   S.TIME	DS	4	Time from midnight (in Tics)
   040.316              00405   S.HIMEM	DS	2	Hardware high memory address + 1
   040.320              00406   S.SYSM	DS	2	FWA Resident system
   040.322              00407   S.USRM	DS	2	LWA user memory
   040.324              00408   S.OMAX	DS	2	Max overlay size for system	
                        00409
                        00410
                        00411   **	The following five cells should be modified/read only via the .consl syscall
   000.200              00412   CSL.ECH	EQU	10000000B	Suppress echo
   000.002              00413   CSL.WRP	EQU	00000010B	Wrap lines at width
   000.001              00414   CSL.CHR	EQU	00000001B	Operate in character mode
                        00415
   000.000              00416   I.CSLMD	EQU	0	S.CSLMD is first byte	
   040.326              00417   S.CSLMD	DS	1	Console mode
                        00418
   000.200              00419   CTP.BKS	EQU	10000000B	Terminal processes backspaces
   000.040              00420   CTP.MLI	EQU	00100000B	Map lower case to upper on input
   000.020              00421   CTP.MLO	EQU	00010000B	Map lower case to upper on output
   000.010              00422   CTP.2SB	EQU	00001000B	Terminal needs two stop bits
   000.002              00423   CTP.BKM	EQU	00000010B	Map Backspace on input to Rubout
   000.001              00424   CTP.TAB	EQU	00000001B	Terminal supports tab characters
                        00425
   000.001              00426   I.CONTY	EQU	1	S.CONTY is 2nd byte
   000.000              00427   	ERRNZ	*-S.CSLMD-I.CONTY
   040.327              00428   S.CONTY	DS	1	Console type flags
                        00429
   000.002              00430   I.CUSOR	EQU	2	S.CUSOR is 3rd byte
   000.000              00431   	ERRNZ	*-S.CSLMD-I.CUSOR
   040.330              00432   S.CUSOR	DS	1	CURRENT CURSOR POSITION
   000.003              00433   I.CONWI	EQU	3	S.CONWI is 4th byte
   000.000              00434   	ERRNZ	*-S.CSLMD-I.CONWI
                        00435
   040.331              00436   S.CONWI	DS	1	Console width
                        00437
   000.001              00438   CO.FLG	EQU	00000001B	CTL-O flag
   000.200              00439   CS.FLG	EQU	10000000B	CTL-S flag
                        00440
   000.004              00441   I.CONFL	EQU	4	S.CONFL is 5th byte
   000.000              00442   	ERRNZ	*-S.CSLMD-I.CONFL
                        00443
   040.332              00444   S.CONFL	DS	1	Console flags
   040.333              00445   S.CAADR	DS	2	Address for abort processing (>256 if valid)
   040.335              00446   S.CCTAB	DS	6	Address for CTL-A, CTL-B, CTL-C processing
                        00447   *	XTEXT	ESINT
                        00448
                        00449   **	S.INT - system internal workarea definitions
                        00450   *	These cells are referenced by overlays and main code, and
                        00451   *	therefore must reside in fixed low memory
                        00452
   040.345              00453   	ORG	S.INT
                        00454   **	Console Status flags
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page    9

   040.345              00455   S.CDB	DS	1	Console descriptor byte
   000.000              00456   CDB.H85	EQU	00000000B
   000.001              00457   CDB.H84	EQU	00000001B	=0 If H8-5, =1 if H8-4
   040.346              00458   S.BAUD	DS	2	[0-14] H8-4 baud rate, =0 if H8-5
                        00459   *			[15] = 1 if baud rate => 2 stop bits
                        00460
                        00461   **	Table Address Words
   040.350              00462   S.DLINK	DS	2	Address of data in HDOS code
   040.352              00463   S.CFWA	DS	2	FWA channel table
   040.354              00464   S.DFWA	DS	2	FWA device table
   040.356              00465   S.RFWA	DS	2	FWS resident HDOS code
                        00466
                        00467   **	Device Driver Delayed load flags
   040.360              00468   S.DDLDA	DS	2	Driver load address (high byte=0 if no load pending)
   040.362              00469   S.DDLEN	DS	2	Code length in bytes
   040.364              00470   S.DDGRP	DS	2	Group number for driver
   040.366              00471   	DS	2	Hold place
                        00472   * S.DDSEC	DS	2	(Obsolete) Sector number for driver
   040.370              00473   S.DDDTA	DS	2	Device's address in DEVLST + DEV.RES
   040.372              00474   S.DDOPC	DS	2	Open Opcode pending
                        00475
                        00476   **	Overlay management flags
   000.001              00477   OVL.IN 	EQU	00000001B	In memory
   000.002              00478   OVL.RES	EQU	00000010B	Permanently resident
   000.200              00479   OVL.UCS	EQU	10000000B	User code swapped for overlay
                        00480
   040.374              00481   S.OVLFL	DS	1	Overlay flag
   040.375              00482   S.UCSF	DS	2	FWA Swapped user code
   040.377              00483   S.UCSL	DS	2	Length swapped user code
   041.001              00484   S.OVLS	DS	2	Size of overlay code
   041.003              00485   S.OVLE	DS	2	Entry point of overlay code
   041.005              00486   S.SSN	DS	2	Swap area sector number
   041.007              00487   S.OSN	DS	2	Overlay sector number
                        00488
                        00489   *	Syscall processing areas
   041.011              00490   S.CACC	DS	1	(ACC) Upon Syscall
   041.012              00491   S.CODE	DS	1	Syscall index in progress
                        00492
                        00493   *	Jumps to routines in resident HDOS code
   041.013              00494   S.JUMPS	DS	0	Start of dump vectors
   041.013              00495   S.SDD	DS	3	Jump to stand-in device driver
   041.016              00496   S.FASER	DS	3	Jump to FATSERR (Fatal system error)
   041.021              00497   S.DIREA	DS	3	Jump to DIREAD (Disk file read)
   041.024              00498   S.FCI	DS	3	Jump to Fetch Channel Info
   041.027              00499   S.SCI	DS	3	Jump to Store Channel Info
   041.032              00500   S.MOUNT	DS	1	<> 0 if the system disk is mounted
   041.033              00501   S.DCS	DS	1	Default cluster size - 1
   041.034              00502   	DS	1	Unused
                        00503
                        00504   *	Stack value saved for overlay syscalls
   041.035              00505   S.OVSTK	DS	2	Value of SP upon Syscalls using overlay
                        00506
                        00507   *	Volume dependent values for SY1:
   041.037              00508   S.S1DIS	DS	2	directory sector
   041.041              00509   S.S1GRT	DS	2	GRT sector
                        00510
                        00511   **	Active I/O area
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   10

                        00512   *
                        00513   *	The AIO.XXX area contains informaton about the I/OOperation
                        00514   *	currently being performed.  The information is obtained from
                        00515   *	the channel table and will be restored there when done.
                        00516   *
                        00517   *	Normally the AIO.XXX information would be obtained directly
                        00518   *	from various system tables via pointer registers.  Since the
                        00519   *	8080 has no good indexed addressing, the data is manually
                        00520   *	copied into the AIO.XXXX cells before processing and
                        00521   *	backdated after processing.
                        00522
   041.043              00523   AIO.VEC	DS	3	Jump instruction
   041.046              00524   AIO.DDA	DS	*-2	Device driver address
   102.112              00525   AIO.FLG	DS	1	Flag byte
   102.113              00526   AIO.GRT	DS	2	Address of group reserv table
   102.115              00527   AIO.SPG	DS	1	sectors per group
   102.116              00528   AIO.CGN	DS	1	Current Group number
   102.117              00529   AIO.CSI	DS	1	current sector index
   102.120              00530   AIO.LGN	DS	1	Last group number
   102.121              00531   AIO.LSI	DS	1	Last sector index
   102.122              00532   AIO.DTA	DS	2	Device Table address
   102.124              00533   AIO.DES	DS	2	directory sector
   102.126              00534   AIO.DEV	DS	2	Device code
   102.130              00535   AIO.UNI	DS	1	Unit number (0-9)
                        00536
   102.131              00537   AIO.DIR	DS	DIRELEN	Directory Entry
                        00538
   102.157              00539   AIO.CNT	DS	1	Sector count
   102.160              00540   AIO.EOM	DS	1	End of media flag
   102.161              00541   AIO.EOF	DS	1	End of file flag
   102.162              00542   AIO.TFP	DS	2	Temp file pointers
   102.164              00543   AIO.CHA	DS	2	Address of Channel block (IOC.DDA)
                        00544
                        00545   ****	Start at page 12
   030.000              00546   	ORG	30000A
   030.000  303 014 037 00547   START	JMP	BOOT	Jump to Boot code
                        00548
                        00549   **	Memory Diagnostic
                        00550   *
                        00551
   030.003  041 300 377 00552   	LXI	H,-64
   030.006  071         00553   	DAD	SP	(HL) = End
   030.007  353         00554   	XCHG		(DE) = End + 1
   030.010  041 100 040 00555   	LXI	H,40100A	(HL) = Start
   030.013  166         00556   	HLT		Pause for adjustment
                        00557
                        00558   *	(HL) = Start
                        00559   *	(DE) = End
                        00560
                        00561   *	Zero Test Area
   030.014  042 076 040 00562   	SHLD	40100A-2
   030.017  066 000     00563   MEM1	MVI	M,0
   030.021  043         00564   	INX	H
   030.022  315 216 030 00565   	CALL	$CDEHL
   030.025  302 017 030 00566   	JNE	MEM1
                        00567
                        00568   *	Start testing memory, increment each byte in turn, and compare
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   11

                        00569   *	that result to the expected value
                        00570
   030.030  006 000     00571   	MVI	B,0	(B) = Expected value
   030.032  052 076 040 00572   MEM2	LHLD	40100A-2
   030.035  004         00573   	INR	B
                        00574
   030.036  064         00575   MEM3	INR	M
   030.037  174         00576   	MOV	A,H	(A) = Value
   030.040  270         00577   	CMP	B
   030.041  312 046 030 00578   	JE	MEM4	Value is ok
                        00579
                        00580   *	Have error, (HL) = address of byte in error
   030.044  166         00581   	HLT
   030.045  000         00582   	NOP
                        00583
   030.046  043         00584   MEM4	INX	H
   030.047  315 216 030 00585   	CALL	$CDEHL
   030.052  302 036 030 00586   	JNE	MEM3	Not at the end of the pass
   030.055  303 032 030 00587   	JMP	MEM2	At end of pass
                        00588   *	XTEXT	COMP
                        00589
                        00590   **	$COMP - compare two character strings
                        00591   *	$COMP compares 2 byte strings
                        00592   *
                        00593   *	Entry	(C) = compare count
                        00594   *		(DE) = FWA of string #1
                        00595   *		(HL) = FWA of string #2
                        00596   *	Exit	'Z' Clear, is mismatch
                        00597   *		(C) = length remaining
                        00598   *		(DE) = address of mismatch in string1
                        00599   *		(HL) = address of mismatch in string 2
                        00600   *		'C' Set, have match
                        00601   *		(DE) = (DE) + (OC)
                        00602   *		(HL) = (HL) + (OC)
                        00603   *	Uses A,F,C,D,E,H,L
                        00604
   030.060  032         00605   $COMP	LDAX	D
   030.061  274         00606   	CMP	H	Compare
   030.062  300         00607   	RNE		No match
   030.063  023         00608   	INX	D
   030.064  043         00609   	INX	H
   030.065  015         00610   	DCR	C
   030.066  302 060 030 00611   	JNZ	$COMP	Try some more
   030.071  311         00612   	RET		Have match
                        00613   *	XTEXT	DADA
                        00614
                        00615   **	$DADA - perform (H,L) = (H,L) + (O,A)
                        00616   *
                        00617   *	Entry	(H,L) = before value
                        00618   *		(A) = before value
                        00619   *	
                        00620   *	Exit	(H,L) = (H,L) + (O,A)
                        00621   *		'C' set if overflow
                        00622   *	Uses F,H,L
   030.072  325         00623   $DADA	PUSH	D
   030.073  137         00624   	MOV	E,A
   030.074  026 000     00625   	MVI	D,0
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   12

   030.076  031         00626   	DAD	D
   030.077  321         00627   	POP	D
   030.100  311         00628   	RET		Exit
                        00629   *	XTEXT	DADA2
                        00630
                        00631   **	$DADA.  -  add (O,A) to (H,L)
                        00632   *
                        00633   *	Entry	None
                        00634   *	Exit	(HL) = (HL) + (OA)
                        00635   *	Uses	A,F,H,L
                        00636
   030.101  205         00637   $DADA.	ADD	L
   030.102  157         00638   	MOV	L,A
   030.103  320         00639   	RNC
   030.104  044         00640   	INR	H
   030.105  311         00641   	RET
                        00642   *	XTEXT	DU66
                        00643
                        00644   **	$DU66 unsigned 16/16 divide
                        00645   *
                        00646   *	(HL) = (BC)/(DE)
                        00647   *
                        00648   *	Entry	(BC), (DE) preset
                        00649   *	Exit	(HL) = result
                        00650   *		(DE) = remainder
                        00651   *	Uses 	All
                        00652
   030.106  172         00653   $DU66	MOV	A,D	Two's complement (DE)
   030.107  057         00654   	CMA
   030.110  127         00655   	MOV	D,A
   030.111  173         00656   	MOV	A,E
   030.112  057         00657   	CMA
   030.113  137         00658   	MOV	E,A
   030.114  023         00659   	INX	D
   030.115  172         00660   	MOV	A,D
   030.116  263         00661   	ORA	E
   030.117  312 205 030 00662   	JZ	DU665	If divide by zero
   030.122  257         00663   	XRA	A
                        00664
                        00665   *	Shift (DE) left until
                        00666   *	1)  DE > BL
                        00667   *	2)  Overflow
                        00668
   030.123  142         00669   DU661	MOV	H,D
   030.124  153         00670   	MOV	L,E
   030.125  011         00671   	DAD	B
   030.126  322 143 030 00672   	JNC	DU662	Is too large
   030.131  074         00673   	INR	A	Count shift
   030.132  142         00674   	MOV	H,D
   030.133  153         00675   	MOV	L,E
   030.134  051         00676   	DAD	H
   030.135  353         00677   	XCHG		(DE) = (DE) *2
   030.136  332 123 030 00678   	JC	DU661	If no overflow
                        00679
                        00680   *	(DE) overflowed, put it back
   030.141  353         00681   	XCHG
   030.142  075         00682   	DCR	A	Remove extra count
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   13

                        00683
                        00684   *	Ready to start subtracting, (A) = loop count
                        00685
   030.143  140         00686   DU662	MOV	H,B	(H,L) = working value
   030.144  151         00687   	MOV	L,C
   030.145  001 000 000 00688   	LXI	B,0	(BC) = result
   030.150  365         00689   DU663	PUSH	PSW	Save (A)
   030.151  031         00690   	DAD	D
   030.152  332 163 030 00691   	JC	DU664	If subtract ok
   030.155  175         00692   	MOV	A,L	Add back in
   030.156  223         00693   	SUB	E
   030.157  157         00694   	MOV	L,A
   030.160  174         00695   	MOV	A,H
   030.161  232         00696   	SBB	D
   030.162  147         00697   	MOV	H,A
   030.163  171         00698   DU664	MOV	A,C
   030.164  027         00699   	RAL
   030.165  117         00700   	MOV	C,A
   030.166  170         00701   	MOV	A,B
   030.167  027         00702   	RAL
   030.170  107         00703   	MOV	B,A
                        00704
                        00705   *	Right shift (DE)
   030.171  067         00706   	STC
   030.172  172         00707   	MOV	A,D
   030.173  037         00708   	RAR
   030.174  127         00709   	MOV	D,A
   030.175  173         00710   	MOV	A,E
   030.176  037         00711   	RAR
   030.177  137         00712   	MOV	E,A
   030.200  361         00713   	POP	PSW
   030.201  075         00714   	DCR	A
   030.202  362 150 030 00715   	JP	DU663	If not done
   030.205  353         00716   DU665	XCHG	(D,E) = remainder
   030.206  140         00717   	MOV	H,B	(HL) = result
   030.207  151         00718   	MOV	L,C
   030.210  311         00719   	RET
                        00720   *	XTEXT	HLIHL
                        00721
                        00722   **	$HLIHL	Load HL indirect through HL
                        00723   *
                        00724   *	(HL) = ((HL))
                        00725   *
                        00726   *	Entry 	None
                        00727   *	Exit	None
                        00728   *	Uses	A,H,L
                        00729
   030.211  176         00730   $HLIHL	MOV	A,M
   030.212  043         00731   	INX	H
   030.213  145         00732   	MOV	H,L
   030.214  157         00733   	MOV	L,A
   030.215  311         00734   	RET
                        00735   *	XTEXT	CDEHL
                        00736
                        00737   **	$CDEHL  - compare (DE) to (HL)
                        00738   *	$CDEHL compare (DE) to (HL) for equality
                        00739   *
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   14

                        00740   *	Entry	None
                        00741   *	Exit	'Z' set if (DE) = (HL)
                        00742   *	Uses	A, F
                        00743
   030.216  173         00744   $CDEHL	MOV	A,E
   030.217  255         00745   	XRA	L
   030.220  300         00746   	RNZ		If different
   030.221  172         00747   	MOV	A,D
   030.222  254         00748   	XRA	H
   030.223  311         00749   	RET
                        00750   *	XTEXT	CHL	Complement (HL)
                        00751   	
                        00752   **	$CHL - complement (HL)
                        00753   *	(HL) = - (HL)	Two's complement
                        00754   *
                        00755   *	Entry	None
                        00756   *	Exit	None
                        00757   *	Uses	A,F,H,L
                        00758
   030.224  174         00759   $CHL	MOV	A,H
   030.225  057         00760   	CMA
   030.226  147         00761   	MOV	H,A
   030.227  175         00762   	MOV	A,L
   030.230  057         00763   	CMA
   030.231  157         00764   	MOV	L,A
   030.232  043         00765   	INX	H
   030.233  311         00766   	RET
                        00767   *	XTEXT	INDL	Indexed load
                        00768   	
                        00769   **	$INDL	Indexed load
                        00770   *	$INDL loads DE with 2 bytes at (HL) + displacement
                        00771   *	This acts as an indexed full word load
                        00772   *
                        00773   *	(DE) = ((HL) + displacement )
                        00774   *
                        00775   *	Entry	((RET)) = displacement (full word)
                        00776   *		(HL) = table address
                        00777   *	Exit	to (RET + 2)
                        00778   *	Uses	A,F, D, E
                        00779
   030.234  343         00780   $INDL	XTHL		(HL) = RET, ((SP)) = Table address
   030.235  136         00781   	MOV	E,M
   030.236  043         00782   	INX	H
   030.237  126         00783   	MOV	D,M	(DE) = displacement
                        00784   	
   030.240  043         00785   	INX	H
   030.241  343         00786   	XTHL		((SP)) = RET, (HL) = table address
   030.242  353         00787   	XCHG		(DE) = Table address, (HL) = displacement
   030.243  031         00788   	DAD	D	(HL) = target address
   030.244  176         00789   	MOV	A,M	
   030.245  043         00790   	INX	H
   030.246  146         00791   	MOV	H,M
   030.247  157         00792   	MOV	L,A	(HL) = ((HL))
   030.250  353         00793   	XCHG		(DE) = value, (HL) = table address
   030.251  311         00794   	RET
                        00795
                        00796   **	$MOVE - move data
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   15

                        00797   *	$MOVE moves a block of bytes to a new memory address.
                        00798   *	If the move is to a lower address, the bytes are moved from
                        00799   *	First to Last.
                        00800   *
                        00801   *	If the move is to a higher adres, the bytes are moved from
                        00802   *	Last to First.
                        00803   *
                        00804   *	This is done so that an overlapped move will not 'ripple'
                        00805   *
                        00806   *	Entry	(BC) = count
                        00807   *		(DE) = From
                        00808   *		(HL) = To
                        00809   *	Exit	Moved
                        00810   *		(DE) = address of next 'From' byte
                        00811   *		(HL) = address of next 'To' byte
                        00812   *		'C' Clear
                        00813   *	Uses	All
                        00814
   030.252              00815   $MOVE	EQU	*
   030.252  170         00816   	MOV	A,B
   030.253  261         00817   	ORA	C
   030.254  310         00818   	RZ		Nothing to move
   030.255  175         00819   	MOV	A,L	Compare 'From' to 'To'
   030.256  223         00820   	SUB	E	
   030.257  174         00821   	MOV	A,H
   030.260  232         00822   	SBB	D
   030.261  332 311 030 00823   	JC	MOV2	Is move down (to lower addresses)
                        00824   	
                        00825   *	is move up (to higher addresses)
   030.264  013         00826   	DCX	B
   030.265  011         00827   	DAD	B	(HL) = 'To' LWA
   030.266  345         00828   	PUSH	H	Save 'To' limit
   030.267  353         00829   	XCHG
   030.270  011         00830   	DAD	B	(HL) = 'From' LWA
   030.271  345         00831   	PUSH	H	Save 'From' limit
                        00832   	
   030.272  176         00833   MOV1	MOV	A,M	Move byte
   030.273  022         00834   	STAX	D
   030.274  033         00835   	DCX	D	Increment 'To' addresss
   030.275  053         00836   	DCX	H	Increment 'from' address
   030.276  013         00837   	DCX	B	Decrement count
   030.277  170         00838   	MOV	A,B
   030.300  247         00839   	ANA	A
   030.301  362 272 030 00840   	JP	MOV1	More to do
   030.304  321         00841   	POP	D	(DE) = 'From' limit
   030.305  341         00842   	POP	H	(HL) = 'To' limit
   030.306  023         00843   	INX	D
   030.307  043         00844   	INX	H
   030.310  311         00845   	RET		Done!
                        00846   	
                        00847   *	is move down to lower address
   030.311  032         00848   MOV2	LDAX	D	Move byte
   030.312  167         00849   	MOV	M,A
   030.313  043         00850   	INX H		Increment 'From'
   030.314  023         00851   	INX	D	Increment 'To'
   030.315  013         00852   	DCX	B	Decrement count
   030.316  170         00853   	MOV	A,B
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   16

   030.317  261         00854   	ORA	C
   030.320  302 311 030 00855   	JNZ	MOV2	If not done, do it again
   030.323  311         00856   	RET		Otherwise done
                        00857   *	XTEXT	MU10
                        00858
                        00859   ** 	$MU10 - multiply unsigned 16 bit quantity by 10
                        00860   *
                        00861   *	(HL) = (DE) * 10
                        00862   *
                        00863   *	Entry	(DE) = multiplier
                        00864   *	Exit	'C' clear if ok
                        00865   *		(HL) = product
                        00866   *		'C' set if error
                        00867   *	Uses	D,E,H,L,F
                        00868
   030.324  353         00869   $MU10	XCHG		(HL) = multiplier
   030.325  051         00870   	DAD	H	(HL) = X * 2
   030.326  330         00871   	RC
   030.327  124         00872   	MOV	D,H
   030.330  135         00873   	MOV	E,L
   030.331  051         00874   	DAD	H	(HL) = X*4
   030.332  330         00875   	RC
   030.333  051         00876   	DAD	H	(HL) = X*8
   030.334  330         00877   	RC	
   030.335  031         00878   	DAD	D	(HL) = X*10
   030.336  311         00879   	RET
                        00880   *	XTEXT	MU66
                        00881   	
                        00882   ** 	$MU66 - multiply unsigned 16 x 16
                        00883   *
                        00884   *	Entry	(BC) = multiplicand
                        00885   *		(DE) = Multiplier
                        00886   *	Exit	(HL) = result
                        00887   *		'Z' set if not overflow
                        00888   *	Uses	All
                        00889
   030.337  257         00890   $MU66	XRA	A
   030.340  365         00891   	PUSH	PSW	Save overflow status
   030.341  041 000 000 00892   	LXI	H,0
                        00893   	
   030.344  170         00894   MU661	MOV	A,B
   030.345  037         00895   	RAR
   030.346  107         00896   	MOV	B,A
   030.347  171         00897   	MOV	A,C
   030.350  037         00898   	RAR
   030.351  117         00899   	MOV	C,A
   030.352  322 364 030 00900   	JNC	MU662	If bit clear
   030.355  031         00901   	DAD	D
   030.356  322 364 030 00902   	JNC	MU662	If not overflow
   030.361  361         00903   	POP	PSW
   030.362  074         00904   	INR	A
   030.363  365         00905   	PUSH	PSW
   030.364  170         00906   MU662	MOV	A,B
   030.365  261         00907   	ORA	C	See if multiplier = 0
   030.366  312 005 031 00908   	JZ	MU663	IF mulitplier =0, we're done
   030.371  353         00909   	XCHG
   030.372  051         00910   	DAD	H	(DE) = (DE) * 2
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   17

   030.373  353         00911   	XCHG
   030.374  322 344 030 00912   	JNC	MU661	If not overflow
   030.377  361         00913   	POP	PSW
   031.000  074         00914   	INR	A
   031.001  365         00915   	PUSH	PSW	Flag overflow
   031.002  303 344 030 00916   	JMP	MU661	Process next bit
                        00917   	
   031.005  361         00918   MU663	POP	PSW	(A,F) = overflow status
   031.006  311         00919   	RET
                        00920   *	XTEXT	MU86
                        00921   	
                        00922   **	$MU86 - multiply 8 x 16 unsigned
                        00923   *	$MU86 multiplies a 16 bit value by an 8 bit value
                        00924   *
                        00925   *
                        00926   *	Entry	(A) = multiplier
                        00927   *		(DE) = multiplicand
                        00928   *	Exit	(HL) = result
                        00929   *		'Z' set if not overflow
                        00930   *	Uses	A,F,H,L
                        00931
   031.007  041 000 000 00932   $MU86	LXI	H,0	(HL) = result accumulator
   031.012  305         00933   	PUSH	B
   031.013  104         00934   	MOV	B,H	(B) = overflow flag
   031.014  267         00935   MU860	ORA	A	Clear carry
   031.015  037         00936   MU861	RAR
   031.016  322 026 031 00937   	JNC	MU862	If not to add
   031.021  031         00938   	DAD	D
   031.022  322 026 031 00939   	JNC	MU862	Not overflow
   031.025  004         00940   	INR	B
   031.026  267         00941   MU862	ORA	A
   031.027  312 044 031 00942   	JZ	MU863	If done
   031.032  353         00943   	XCHG	
   031.033  051         00944   	DAD	H	
   031.034  353         00945   	XCHG
   031.035  322 015 031 00946   	JNC	MU861	Loop if not overflow
   031.040  004         00947   	INR	B
   031.041  303 014 031 00948   	JMP	MU860
                        00949   	
   031.044  260         00950   MU863	ORA	B	Set *Z* flag if not overflow
   031.045  301         00951   	POP	B	Restore (BC)
   031.046  311         00952   	RET
                        00953   *	XTEXT	SAVALL
                        00954   	
                        00955   **	$RSTALL - restore all registers
                        00956   *
                        00957   *	$RSTALL restores all registers off the stack and
                        00958   *	returns to the previous caller
                        00959   *
                        00960   *	Entry	(SP) = PSW
                        00961   *		(SP+2) = BC
                        00962   *		(SP+4) = DE
                        00963   *		(SP+6) = HL
                        00964   *		(SP+8) = Return address
                        00965   *	Exit	To *Return*, registers restored
                        00966   *	Uses	All
                        00967
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   18

   031.047  361         00968   $RSTALL	POP	PSW
   031.050  301         00969   	POP	B
   031.051  321         00970   	POP	D
   031.052  341         00971   	POP	H
   031.053  311         00972   	RET
                        00973   	
                        00974   **	$SAVALL - saves all registers on stack
                        00975   *
                        00976   *	Entry	None
                        00977   *	Exit	(SP) = PSW
                        00978   *		(SP+2) = BC
                        00979   *		(SP+4) = DE
                        00980   *		(SP+6) = HL
                        00981   *		(SP+8) = Return address
                        00982   *	Uses	H,L
                        00983
   031.054  343         00984   $SAVALL	XTHL		Push H, (HL) = return address
   031.055  325         00985   	PUSH	D
   031.056  305         00986   	PUSH	B
   031.057  365         00987   	PUSH	PSW
   031.060  351         00988   	PCHL		Return to caller
                        00989   *	XTEXT	TJMP
                        00990   	
                        00991   **	$TJMP - Table jump
                        00992   *	Useage:
                        00993   *	CALL	$TJMP	(A) = index
                        00994   *	DW	ADDR1	Index = 0
                        00995   *
                        00996   *
                        00997   *	DW	ADDRN	Index = N-1
                        00998   *
                        00999   *	Entry	(A) = Index
                        01000   *	Exit	To Processor
                        01001   *		(A) = Index * 2
                        01002   *	Uses	A,F
                        01003
   031.061  007         01004   $TJMP	RLC		(A) = Index *2
                        01005
   031.062              01006   $TJMP.	EQU	*
   031.062  343         01007   	XTHL		(HL) = Table Address
   031.063  365         01008   	PUSH	PSW	Save Index * 2
   031.064  315 072 030 01009   	CALL	$DADA
   031.067  176         01010   	MOV	A,M
   031.070  043         01011   	INX	H
   031.071  146         01012   	MOV	H,M
   031.072  157         01013   	MOV	L,A
   031.073  361         01014   	POP	PSW	(A) = index * 2
   031.074  343         01015   	XTHL		Address on stack
   031.075  311         01016   	RET		Jump to processor
                        01017   *	XTEXT	TBRA
                        01018   	
                        01019   **	$TBRA - branch relative through table
                        01020   *
                        01021   *	$TBRA uses the supplied index to select a byte from the
                        01022   *	Jump table.  The contents of this byte are added to the
                        01023   *	address of the byte, yielding the processor address.
                        01024   *
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   19

                        01025   *	CALL 	$TBRA
                        01026   *	DB	LAB1 - *		Index = 0 for Lab1
                        01027   *	DB	LAB2 - *		Index = 1 for Lab2
                        01028   *	DB	LABN - *		Index = N-1 for LabN
                        01029   *
                        01030   *	Entry	(A) = Index
                        01031   *		(RET) = Table FWA
                        01032   *	Exit	to computed address
                        01033   *	Uses	F,H,L
                        01034
   031.076              01035   $TBRA	EQU	*
   031.076  343         01036   	XTHL		(HL) = table address
   031.077  325         01037   	PUSH	D
   031.100  137         01038   	MOV	E,A
   031.101  026 000     01039   	MVI	D,0
   031.103  031         01040   	DAD	D	(HL) = address of element
   031.104  136         01041   	MOV	E,M	
   031.105  031         01042   	DAD	D	(HL) = processor address
   031.106  321         01043   	POP	D
   031.107  343         01044   	XTHL
   031.110  311         01045   	RET
                        01046   	
                        01047   **	$TBLS - table search
                        01048   *
                        01049   *	Table format
                        01050   *	DB	Key1, Val1
                        01051   *	.	.
                        01052   *	.	.
                        01053   *	DB	KeyN, ValN
                        01054   *	DB	0
                        01055   *
                        01056   *	Entry	(A) = pattern
                        01057   *		(H,L) = table FWA
                        01058   *	Exit	(A) = pattern if found
                        01059   *		'Z' set if found
                        01060   *	Uses	a, F, H, L
                        01061
   031.111  305         01062   $TBLS	PUSH	B
   031.112  107         01063   	MOV	B,A
   031.113  176         01064   $TBL1	MOV	A,M	(A) = character
   031.114  270         01065   	CMP	B
   031.115  312 133 031 01066   	JZ	$TBL2	If match
   031.120  247         01067   	ANA	A
   031.121  043         01068   	INX	H
   031.122  043         01069   	INX	H	Skip past
   031.123  302 113 031 01070   	JNZ	$TBL1	If not end of table
   031.126  053         01071   	DCX	H
   031.127  053         01072   	DCX	H
   031.130  264         01073   	ORA	H	Clear 'Z'
   031.131  076 000     01074   	MVI	A,0	Set (A) = 0 for old users
                        01075
                        01076   *	DONE
                        01077
   031.133  301         01078   $TBL2	POP	B
   031.134  043         01079   	INX	H
   031.135  311         01080   	RET
                        01081   	
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   20

                        01082   **	$TYPTX - Type text
                        01083   *	$TYPTX is called to type a block of text on the system console.
                        01084   *
                        01085   *	Embedded zero bytes indicate a carriage return line line feed.
                        01086   *	A byte with the 200Q bit set is the last byte in the message.
                        01087   *
                        01088   *	Entry	(RET) = Text
                        01089   *	Exit	To (RET + Length)
                        01090   *	Uses	A,F
                        01091
   031.136  343         01092   $TYPTX	XTHL		(HL) = text address
   031.137  315 144 031 01093   	CALL	$TYPTX.	Type it
   031.142  343         01094   	XTHL
   031.143  311         01095   	RET
                        01096   	
   031.144  176         01097   $TYPTX.	MOV	A,M
   031.145  346 177     01098   	ANI	177Q
   031.147  377 002     01099   	DB	SYSCALL,.SCOUT
   031.151  276         01100   	CMP 	M
   031.152  043         01101   	INX	H
   031.153  312 144 031 01102   	JE	$TYPTX.	More to go
   031.156  311         01103   	RET
                        01104   *	XTEXT	UDD
                        01105
                        01106   **	$UDD - unpack decimal digits
                        01107   *
                        01108   *	UDD converts a 16 bit value into a specified number of
                        01109   *	decimal digits.  The result is zero filled.
                        01110   *
                        01111   *	Entry	(B,C) = Address value
                        01112   *		(A) = Digit count
                        01113   *		(H,L) = memory address
                        01114   *	Exit	(HL) = (HL) + (A)
                        01115   *	USes	All
                        01116
   031.157              01117   $UDD	EQU	*
   031.157  315 072 030 01118   	CALL	$DADA
   031.162  345         01119   	PUSH	H	Save final (HL) value
                        01120   	
   031.163  365         01121   UDD1	PUSH	PSW
   031.164  345         01122   	PUSH	H
   031.165  021 012 000 01123   	LXI	D,10
   031.170  315 106 030 01124   	CALL	$DU66	(HL) = value/10
   031.173  345         01125   	PUSH	H
   031.174  301         01126   	POP	B	(B,C) = remainder
   031.175  341         01127   	POP	H
   031.176  076 060     01128   	MVI	A,'0'
   031.200  203         01129   	ADD	E	Add remainder
   031.201  053         01130   	DCX	H
   031.202  167         01131   	MOV	M,A	Store digit
   031.203  361         01132   	POP	PSW
   031.204  075         01133   	DCR	A
   031.205  302 163 031 01134   	JNZ	UDD1	If more to go
   031.210  341         01135   	POP	H	Restore H
   031.211  311         01136   	RET
                        01137   *	XTEXT 	ZERO
                        01138
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   21

                        01139   **	$ZERO - zero memory
                        01140   *
                        01141   *	zero a block of memory
                        01142   *
                        01143   *	Entry	(HL) = address
                        01144   *		(B) = count
                        01145   *	Exit	(A) = 0
                        01146   *	Uses	A,B,F,H,L
                        01147
   031.212  257         01148   $ZERO	XRA	A
   031.213  167         01149   ZRO1	MOV	M,A
   031.214  043         01150   	INX	H
   031.215  005         01151   	DCR	B
   031.216  302 213 031 01152   	JNZ	ZRO1	If more to do
   031.221  311         01153   	RET
                        01154
                        01155   ****	Start at page 25
                        01156   **	$WDR -write disable RAM
                        01157   *	is called to disable the writability of the H17 controller RAM area
                        01158   *	Entry	None
                        01159   *	Exit	None
                        01160   *	Uses	None
                        01161
   031.222  365         01162   $WDR	PUSH	PSW
   031.223  363         01163   	DI
   031.224  072 242 040 01164   	LDA	D.DVCTL
   031.227  346 177     01165   	ANI	377Q-DF.WR
   031.231  062 242 040 01166   $WDR1	STA	D.DVCTL
   031.234  323 177     01167   	OUT	DP.DC
   031.236  373         01168   	EI
   031.237  361         01169   	POP	PSW
   031.240  311         01170   	RET
                        01171   	
                        01172   **	$WER -write ensable RAM
                        01173   *	is called to enable the writability of the H17 controller RAM area
                        01174   *	Entry	None
                        01175   *	Exit	None
                        01176   *	Uses	None
                        01177
   031.241  365         01178   $WER	PUSH	PSW
   031.242  363         01179   	DI
   031.243  072 242 040 01180   	LDA	D.DVCTL
   031.246  366 200     01181   	ORI	DF.WR
   031.250  303 231 031 01182   	JMP	$WDR1
                        01183   	
                        01184   **	D.DISK - Device driver read code
                        01185   *
                        01186   *	Entry	(BC) = count (in sectors)
                        01187   *		(DE) = address
                        01188   *		(HL) = sector
                        01189   *	Exit	'C' clear if OK, exit to caller
                        01190   *		'C' set if error
                        01191   *		To S.FASER (Fatal/System Error) if Unit 0
                        01192   *		To caller if other unit
                        01193   *		(A) = Error code
                        01194   *	Uses	<not given in source code listing>
                        01195
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   22

   031.253  076 001     01196   DWRITE	MVI	A,DC.WRI
   031.255  376         01197   	DB	MI.CPI	Skip next
   031.256  257         01198   DREAD	XRA	A	Set read code
   000.000              01199   	ERRNZ	DC.REA
   031.257  315 130 040 01200   	CALL	SYDD	Call device driver
   031.262  320         01201   	RNC		If OK
   031.263  365         01202   	PUSH	PSW	Save code
   031.264  072 130 102 01203   	LDA	AIO.UNI
   031.267  247         01204   	ANA	A
   031.270  314 016 041 01205   	CZ	S.FASER	Is SY0:
   031.273  361         01206   	POP	PSW
   031.274  311         01207   	RET		Return with bad news
                        01208   	
                        01209   **	SREAD - read from system disk
                        01210   *
                        01211   *	Entry	(BC) = count (in sectors)
                        01212   *		(DE) = address
                        01213   *		(HL) = sector
                        01214   *	Exit	To Caller if OK
                        01215   *		To S.FASER (Fatal system error) IF error
                        01216   *	Uses	<not noted>
                        01217
   031.275  072 130 102 01218   SREAD	LDA	AIO.UNI
   031.300  365         01219   	PUSH	PSW	Save current unit
   031.301  257         01220   	XRA	A
   000.000              01221   	ERRNZ	DC.REA
   031.302  062 130 102 01222   	STA	AIO.UNI
   031.305  315 130 040 01223   SREAD1	CALL	SYDD
   031.310  334 016 041 01224   	CC	S.FASER	Read error
   031.313  361         01225   	POP	PSW
   031.314  062 130 102 01226   	STA	AIO.UNI
   031.317  311         01227   	RET
                        01228   	
                        01229   **	Constant zeros
   031.320  000 000 000 01230   ZEROS	DB	0,0,0,0,0,0,0,0
                        01231
                        01232   **	SWRITE - write to system disk
                        01233   *
                        01234   *	Entry	(BC) = count (in sectors)
                        01235   *		(DE) = address
                        01236   *		(HL) = sector
                        01237   *	Exit	To Caller if OK
                        01238   *		To S.FASER (Fatal system error) IF error
                        01239   *	Uses	<not noted>
                        01240
   031.330  072 130 102 01241   SWRITE	LDA	AIO.UNI
   031.333  365         01242   	PUSH	PSW	Save old unit #
   031.334  257         01243   	XRA	A
   031.335  062 130 102 01244   	STA	AIO.UNI	Set system unit
   000.000              01245   	ERRNZ	DC.WRI-1
   031.340  074         01246   	INR	A	(A) = DC.WRI
   031.341  303 305 031 01247   	JMP	SREAD1
                        01248   	
                        01249   **	ERR.FNO - Error: File not open
   031.344  076 011     01250   ERR.FNO	MVI	A,EC.FNO	File not open
   031.346  067         01251   	STC
   031.347  311         01252   	RET		Error code
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   23

                        01253   	
                        01254   **	ERR.ILR - Error - Illegal request
                        01255
   031.350  076 012     01256   ERR.ILR	MVI	A,EC.ILR	Illegal request
   031.352  067         01257   	STC
   031.353  311         01258   	RET
                        01259   	
                        01260   **	CFF - Chain free block to file
                        01261   *
                        01262   *	CFF unchains a free block from the free list and chains
                        01263   *	it to the end of the active file
                        01264   *
                        01265   *	Entry	(HL) = address in group table of the group in question
                        01266   *		(E) = index of previous group inlist
                        01267   *		AIO.XXX setup
                        01268   *	Exit	AIO.LGN = (L) (at entry)
                        01269   *		AIO.LSI = 0
                        01270   *	Uses 	A,F,D,H,L
                        01271
   031.354  176         01272   CFF	MOV	A,M		(A) = next free
   031.355  066 000     01273   	MVI	M,0		New block is end of chain for file
   031.357  125         01274   	MOV	D,L		(D) = new index
   031.360  153         01275   	MOV	L,E		(HL) = address of previous block
   031.361  167         01276   	MOV	M,A		Unchain from free chain
   031.362  072 120 102 01277   	LDA	AIO.LGN		(A) = last group number
   031.365  157         01278   	MOV	L,A		(HL) = address of file last group
   031.366  162         01279   	MOV	M,D		Link to new last block
   031.367  041 120 102 01280   	LXI	H,AIO.LGN
   031.372  162         01281   	MOV	M,D		Set new LGN
   000.000              01282   	ERRNZ	AIO.LSI-AIO.LGN-1
   031.373  043         01283   	INX	H
   031.374  066 000     01284   	MVI	M,0		Clear LSI
   031.376  311         01285   	RET
                        01286
                        01287   **	DCA - determine contiguous area
                        01288   *
                        01289   *	DCA is called to find how many of the sectors which are to be
                        01290   *	read are continguous
                        01291   *
                        01292   *	ENTRY	(B) = sectors desired
                        01293   *		AIO.xxx setup
                        01294   *	EXIT	(B) = sectors - AIO.CNT
                        01295   *		AIO.CNT = sectors which are continuous
                        01296   *		AIO.EOF = EC.EOF * 2 + 1 if EOF
                        01297   *		AIO.TFP = setup with group and index of start of area
                        01298   *	USES	All
                        01299
   031.377  315 205 032 01300   DCA1	CALL FFL		Follow Forward Link
                        01301
   032.002  052 116 102 01302   DCA	LHLD	AIO.CGN	(H) = current GP #, (L) = current sector index
   000.000              01303   	ERRNZ	AIO.CSI-AIO.CGN-1
   032.005  042 162 102 01304   	SHLD	AIO.TFP	Temp file ptr
   032.010  315 233 033 01305   	CALL	TFE	Test for EOF
   032.013  062 161 102 01306   	STA	AIO.EOF	Set flag
   032.016  062 157 102 01307   	STA	AIO.CNT	Set CNT = 0 if EOF
   032.021  310         01308   	RE		Is EOF
   032.022  072 117 102 01309   	LDA	AIO.CSI	(A) = current sector index
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   24

   032.025  147         01310   	MOV	H,A
   032.026  072 115 102 01311   	LDA	AIO.SPG
   032.031  274         01312   	CMP	H	See if group exhausted
   032.032  312 377 031 01313   	JE	DCA1	Was pointing at end of group
                        01314   * 	See if more needed
   032.035  170         01315   DCA2	MOV	A,B
   032.036  247         01316   	ANA	A
   032.037  310         01317   	RZ		No more sectors to check
                        01318   *	See how many sectors are left in this group
   032.040  052 120 102 01319   	LHLD	AIO.LGN	(L) = AIO.LGN, (H) = AIO.LSI
   000.000              01320   	ERRNZ	AIO.LSI-AIO.LGN-1
   032.043  072 116 102 01321   	LDA	AIO.CGN
   032.046  275         01322   	CMP	L	See if we are pointed at last group
   032.047  312 055 032 01323   	JE	DCA3	We are pointed at last group
   032.052  052 114 102 01324   	LHLD	AIO.SPG-1	(H) = AIO.SPG
   032.055  365         01325   DCA3	PUSH	PSW	Save status
   032.056  072 117 102 01326   	LDA	AIO.CSI	(A) = current sector index
   032.061  224         01327   	SUB	H	(A) = - sectors left in group
   032.062  057         01328   	CMA
   032.063  074         01329   	INR	A	(A) = + sectors left in group
   032.064  270         01330   	CMP	B
   032.065  332 071 032 01331   	JC	DCA4	Need more
   032.070  170         01332   	MOV	A,B	Don't take more than we need
   032.071  117         01333   DCA4	MOV	C,A	(C) = amount to take
   032.072  041 117 102 01334   	LXI	H,AIO.CSI
   032.075  206         01335   	ADD	M	Update CSI to indicate number to be read
   032.076  167         01336   	MOV	M,A
   032.077  171         01337   	MOV	A,C	(A) = number to be read
   032.100  041 157 102 01338   	LXI	H,AIO.CNT
   032.103  206         01339   	ADD	M	Add to count
   032.104  167         01340   	MOV	M,A
   032.105  170         01341   	MOV	A,B	(A) = amount needed
   032.106  221         01342   	SUB	C
   032.107  107         01343   	MOV	B,A
   032.110  361         01344   	POP	PSW
   032.111  310         01345   	RE		Was on last track; done
   032.112  170         01346   	MOV	A,B
   032.113  247         01347   	ANA	A
   032.114  310         01348   	RZ		No more needed, done
                        01349   	
                        01350   *	Used up this block, link to next
                        01351   *	If not contiguous, stop here
                        01352
   032.115  072 116 102 01353   	LDA	AIO.CGN
   032.120  074         01354   	INR	A
   032.121  365         01355   	PUSH	PSW	Save next contiguous block #
   032.122  315 205 032 01356   	CALL	FFL	Follow file link
   032.125  361         01357   	POP	PSW
   032.126  275         01358   	CMP	L
   032.127  312 035 032 01359   	JE	DCA2	Got it, was contiguous
   032.132  311         01360   	RET		STOP Here
                        01361   	
                        01362   **	FFB - find free block
                        01363   *
                        01364   *	FFB is called to locate a free block in the GRT's free chain
                        01365   *
                        01366   *	FFB will attempt to get a 'preferred block', if possible.
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   25

                        01367   *	If the preferred block is not available, FFB will (optionally)
                        01368   *	do the best he can: start a virgin cluster.  If possible, then
                        01369   *	just settle for anything
                        01370   *
                        01371   *	ENTRY	(D) = preferred block number (0 if none)
                        01372   *		(C) = preferred flag <= 0, will take something else
                        01373   *			      <> 0, must have preferred block or nothing
                        01374   *	EXIT	'C' set, EOM on device
                        01375   *		'C' clear, not EOM
                        01376   *		'Z' clear, couldn't get preferred block (only if (C)<>0 on Entry)
                        01377   *		'Z' set, got a block (preferred or not)
                        01378   *		(HL) = address of block in GRT table
                        01379   *		(E) = index of free block before the found one
                        01380   *	USES	A,F,E,H,L
                        01381
   032.133  052 113 102 01382   FFB	LHLD	AIO.GRT
   032.136  176         01383   	MOV	A,M	(A) = first free block
   032.137  247         01384   	ANA	A
   032.140  067         01385   	STC		Assume EOM
   032.141  310         01386   	RZ		End of media
                        01387   *	Not end of media, try to find the contiguous block in the free list
                        01388
   032.142  135         01389   	MOV	E,L	(E) = index of previous byte
   032.143  054         01390   	INR	L
   032.144  167         01391   	MOV	M,A	Flag change in GRT
   032.145  157         01392   FFB4	MOV	L,A	(HL) = address of next byte in free chain
   032.146  272         01393   	CMP	D
   032.147  310         01394   	RE		Got the one we need
   032.150  322 161 032 01395   	JNC	FFB5	Gone too far
   032.153  135         01396   	MOV	E,L	Save this block index
   032.154  176         01397   	MOV	A,M
   032.155  247         01398   	ANA	A
   032.156  302 145 032 01399   	JNZ	FFB4
                        01400   	
                        01401   *	Couldn't find contiguous block. This means a break in
                        01402   *	Continuity.  If we have anything, return with it. If we
                        01403   *	have nothing yet, try to find a virgin cluster.
                        01404
   032.161  171         01405   FFB5	MOV	A,C
   032.162  247         01406   	ANA	A
   032.163  300         01407   	RNZ		Must NOT continue
   032.164  157         01408   	MOV	L,A	(HL) = (AIO.GRT)
   032.165  135         01409   FFB6	MOV	E,L	(E) = index of previous node
   032.166  156         01410   	MOV	L,M	Link forward
   032.167  072 146 102 01411   	LDA	AIO.DIR+DIR.CLU
   032.172  245         01412   	ANA	L	See if start of cluster
   032.173  310         01413   	RZ		Got virgin cluster
   032.174  176         01414   	MOV	A,M
   032.175  247         01415   	ANA	A
   032.176  302 165 032 01416   	JNZ	FFB6	Try again
                        01417   	
                        01418   *	Can't find virgin cluster, will take whatever we can get
                        01419
   032.201  157         01420   	MOV	L,A
   032.202  135         01421   	MOV	E,L	(E) = index of previous mode
   032.203  156         01422   	MOV	L,M	(HL) = address of first free block byte
   032.204  311         01423   	RET		Return with 'Z' : got one
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   26

                        01424   	
                        01425   **	FFL - follow forward link
                        01426   *
                        01427   *	FFL links AIO.CGN to the next group
                        01428   *
                        01429   *	ENTRY	None
                        01430   *	EXIT	AIO.CGN = Link(AIO.CGN)
                        01431   *		AIO.CSI = 0
                        01432   *		(L) = AIO.CGN
                        01433   *	USES	A,F,H,L
                        01434
   032.205  052 113 102 01435   FFL	LHLD	AIO.GRT
   032.210  072 116 102 01436   	LDA	AIO.CGN
   032.213  157         01437   	MOV	L,A	(HL) = address
   032.214  156         01438   	MOV	L,M	(L) = link
   032.215  046 000     01439   	MVI	H,0
   032.217  042 116 102 01440   	SHLD	AIO.CGN	Set CGN, Clear CSI
   000.000              01441   	ERRNZ	AIO.CSI-AIO.CGN-1
   032.222  311         01442   	RET
                        01443
                        01444   **	LDD - Load Device Driver
                        01445   *
                        01446   *	LDD is called to perform the suspended load of a device driver.
                        01447   *
                        01448   *	IF some OVL code wishes to load a device driver, it must
                        01449   *	suspend the request since the device driver will overlay the
                        01450   *	OVL code.  After the OVL code exits, the resident code will call
                        01451   *	LDD to perform the actual load, over the DVL.
                        01452   *
                        01453   *	ENTRY	DD.IOC = Pointer to IOC.DDA
                        01454   *		DD.LDA = load address
                        01455   *		DD.LEN = load length
                        01456   *		DD.SEC = sector index on system device
                        01457   *		DD.DTA = device resident address
                        01458   *		DD.OPE = Open code (DC.OPR, DC.OPW, DC>OPU)
                        01459   *	EXIT	OVL code destroyed
                        01460   *	USES	None
                        01461
   040.364              01462   S.DDSEC	EQU	S.DDGRP	Reference to make assemble ok
                        01463
   032.223  315 054 031 01464   LDD	CALL	$SAVALL	Save registers
                        01465
                        01466   *	Clear OVL resident flag
   032.226  041 374 040 01467   	LXI	H,S.OVLFL
   032.231  176         01468   	MOV	A,M
   032.232  346 376     01469   	ANI	377Q-OVL.IN
   032.234  167         01470   	MOV	M,A	Clear in flag
                        01471   	
                        01472   *	Load overlay
   032.235  052 362 040 01473   	LHLD	S.DDLEN	(HL) = length
   032.240  104         01474   	MOV	B,H
   032.241  115         01475   	MOV	C,L	(BC) is length
   032.242  052 360 040 01476   	LHLD	S.DDLDA	(HL) is load address
   032.245  345         01477   	PUSH	H	Save for later
   032.246  353         01478   	XCHG
   032.247  041 377 026 01479   	LXI	H,SECSCR+255	Force new disk read right away
                        01480
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   27

                        01481   *	Load binary
   032.252  315 362 032 01482   LDD2	CALL	LDD8	Find next byte
   032.255  176         01483   	MOV	A,M	(A) = Next byte
   032.256  022         01484   	STAX	D	Copy
   032.257  023         01485   	INX	D
   032.260  013         01486   	DCX	B
   032.261  170         01487   	MOV	A,B
   032.262  261         01488   	ORA	C
   032.263  302 252 032 01489   	JNZ	LDD2	More to go
                        01490   	
                        01491   *	Code all loaded, relocate it
   032.266  301         01492   	POP	B	(BC) = REL factor
   032.267  005         01493   	DCR	B
   032.270  005         01494   	DCR	B
UP 376.000              01495   	ERRNZ	DD.ENT-2000A	Assume driver entry = 2000A
   032.271  315 362 032 01496   LDD3	CALL	LDD8
   032.274  136         01497   	MOV	E,M
   032.275  315 362 032 01498   	CALL	LDD8
   032.300  126         01499   	MOV	D,M	(DE) = rel adreese of workd to relocate
   032.301  172         01500   	MOV	A,D
   032.302  263         01501   	ORA	E
   032.303  312 323 032 01502   	JZ	LDD4	All done
   032.306  353         01503   	XCHG		(HL) = relative address of word to relocate
   032.307  011         01504   	DAD	B	(HL) = absolute address of word to relocate
   032.310  176         01505   	MOV	A,M
   032.311  201         01506   	ADD	C
   032.312  167         01507   	MOV	M,A
   032.313  043         01508   	INX	H
   032.314  176         01509   	MOV	A,M
   032.315  210         01510   	ADC	B
   032.316  167         01511   	MOV	M,A
   032.317  353         01512   	XCHG		Restore (HL)
   032.320  303 271 032 01513   	JMP	LDD3
                        01514   	
                        01515   *	Setup entry addresses in tables
   032.323  052 360 040 01516   LDD4	LHLD	S.DDLDA
   032.326  353         01517   	XCHG		(DE) = Entry address
   032.327  052 370 040 01518   	LHLD	S.DDDTA	(HL) = address of devlst entry
   032.332  176         01519   	MOV	A,M
   032.333  366 001     01520   	ORI	DR.IM	Set in memory
   032.335  167         01521   	MOV	M,A
   032.336  043         01522   	INX	H
   032.337  043         01523   	INX	H
   000.000              01524   	ERRNZ	DEV.DDA-DEV.RES-2
   032.340  163         01525   	MOV	M,E
   032.341  043         01526   	INX	H
   032.342  162         01527   	MOV	M,D	Set address in table
   032.343  353         01528   	XCHG		(HL) = entry point address
   032.344  257         01529   	XRA	A
   032.345  062 361 040 01530   	STA	S.DDLDA+1	Clear Load Flag
   032.350  072 372 040 01531   	LDA	S.DDOPC	(A) = Open Code
   032.353  315 361 032 01532   	CALL	PCHL	Call code
   032.356  303 047 031 01533   	JMP	$RSTALL	Restore registers
                        01534   	
   032.361  351         01535   PCHL	PCHL
                        01536   	
                        01537   **	LDD8 - read a byte from the file
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   28

                        01538   *
                        01539   *	ENTRY	(HL) = SecScr Pointer of current byte
                        01540   *		S.DDSEC = sector number of next sector
                        01541   *	EXIT	(HL) = address of next byte
                        01542   *	USES	L
                        01543
   032.362  054         01544   LDD8	INR	L	Point to next byte
   032.363  300         01545   	RNZ		Got it
                        01546   	
                        01547   *	Must read another
                        01548
   032.364  305         01549   	PUSH	B
   032.365  325         01550   	PUSH	D
   032.366  345         01551   	PUSH	H
   032.367  353         01552   	XCHG		(DE) = address
   032.370  001 000 001 01553   	LXI	B,256
   032.373  052 364 040 01554   	LHLD	S.DDSEC	(HL) = sector number to read
   032.376  043         01555   	INX	H
   032.377  042 364 040 01556   	SHLD	S.DDSEC	(HL) = next sector number to read
   033.002  053         01557   	DCX	H	Restore (HL)
   033.003  315 275 031 01558   	CALL	SREAD	Read it
   033.006  341         01559   	POP	H
   033.007  321         01560   	POP	D
   033.010  301         01561   	POP	B
   033.011  311         01562   	RET
                        01563   	
                        01564   **	LDO - Load OVL code
                        01565   *	LDO is called when the OVL Overlay must be loaded
                        01566   *
                        01567   *	IF User High Mem is too high, part of the user code will
                        01568   *	have to be saved on the swap area before the OVL code can be
                        01569   *	loaded.
                        01570   *
                        01571   *	ENTRY	None
                        01572   *	EXIT	None
                        01573   *	USES	A,F,H,L
                        01574
   033.012  325         01575   LDO	PUSH	D
   033.013  305         01576   	PUSH	B
                        01577   *	See if will have to page user code
   033.014  052 001 041 01578   	LHLD	S.OVLS	(HL) = size of HDOSOVL
   033.017  315 224 030 01579   	CALL	$CHL	Complement (HL)
   033.022  353         01580   	XCHG	(DE) = -size
   033.023  052 320 040 01581   	LHLD	S.SYSM	(HL) = current FWA
   033.026  031         01582   	DAD	D	(HL) = new FWA with OVL
   033.027  042 375 040 01583   	SHLD	S.UCSF	Set user swap in case it is swapped
   033.032  353         01584   	XCHG
   033.033  052 322 040 01585   	LHLD	S.USRM
   033.036  175         01586   	MOV	A,L
   033.037  223         01587   	SUB	E
   033.040  157         01588   	MOV	L,A
   033.041  174         01589   	MOV	A,H
   033.042  232         01590   	SBB	D
   033.043  147         01591   	MOV	H,A	(HL) = amount to swap
   033.044  332 073 033 01592   	JC	LDO1	No need to swap
                        01593   *	Must dump (HL) bytes of user code starting at (DE)
   033.047  305         01594   	PUSH	B	check: is B really D??
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   29

   033.050  042 377 040 01595   	SHLD	S.UCSL	SET LENGTH OF DUMP
   033.053  104         01596   	MOV	B,H
   033.054  115         01597   	MOV	C,L	(BC) = COUNT
   033.055  052 005 041 01598   	LHLD	S.SSN	(HL) = SECTOR FOR SWAP (SET BY BOOT)
   033.060  315 330 031 01599   	CALL	SWRITE
   033.063  041 374 040 01600   	LXI	H,S.OVLFL
   033.066  076 200     01601   	MVI	A,OVL.UCS
   033.070  266         01602   	ORA	M	SET USER CODE SWAPPED
   033.071  167         01603   	MOV	M,A
   033.072  321         01604   	POP	D	(DE) = ADDRESS TO LOAD
                        01605   	
                        01606   *	READY TO LOAD OVL OVERLAY
                        01607   *	(DE) = ADDRESS
   033.073  052 001 041 01608   LDO1	LHLD	S.OVLS
   033.076  104         01609   	MOV	B,H
   033.077  115         01610   	MOV	C,L	(BC) = SIZE OF OVERLAY
   033.100  052 007 041 01611   	LHLD	S.OSN
   033.103  315 275 031 01612   	CALL	SREAD	READ DATA
   033.106  041 374 040 01613   	LXI	H,S.OVLFL
   033.111  176         01614   	MOV	A,M
   033.112  366 001     01615   	ORI	OVL.IN	SET IT IN
   033.114  167         01616   	MOV	M,A
                        01617   *	Relocate OVL
   033.115  052 375 040 01618   	LHLD	S.UCSF	(HL) = FWA OVERLAY LOAD
   033.120  021 006 000 01619   	LXI	D,PIC.COD
   033.123  104         01620   	MOV	B,H
   033.124  115         01621   	MOV	C,L	(BC) = OVL FWA
   033.125  031         01622   	DAD	D	(HL) = ADDRESS OF ENTRY POINT
   033.126  042 003 041 01623   	SHLD	S.OVLE	SET ENTRY POINT
   000.000              01624   	ERRNZ	PIC.PTR-PIC.COD+2
   033.131  053         01625   	DCX	H
   033.132  176         01626   	MOV	A,M
   033.133  053         01627   	DCX	H
   033.134  156         01628   	MOV	L,M
   033.135  147         01629   	MOV	H,A	(HL) = RELATIVE ADDRESS OF TABLE
   033.136  011         01630   	DAD	B	(HL) = ABSOLUTE ADDRESS OF TABLE
   033.137  315 175 033 01631   	CALL	REL.	RELOCATE OVL
                        01632   	
   033.142  301         01633   	POP	B
   033.143  321         01634   	POP	D
   033.144  311         01635   	RET
                        01636
                        01637   ** line 1862
                        01638   **	PDI - prepare for device I/)
                        01639   *	PDI preparees for physical I/O by
                        01640   *	  1) computing the physical addresses
                        01641   *	  2) prepare the count
                        01642   *
                        01643   *	ENTRY	AIO.XXX setup
                        01644   *	EXIT	(BC) = count
                        01645   *		(HL) = sector
                        01646   *		(A) = 0
                        01647   *	USES	A,F,B,C,H,L
                        01648
   033.145  052 162 102 01649   PDI	LHLD	AIO.TFP	(L) = AIO.CGN, (H) = AIO.CSI
   000.000              01650   	ERRNZ	AIO.CSI-AIO.CGN-1	
   033.150  072 115 102 01651   	LDA	AIO.SPG	(A) = sectors per group
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   30

   033.153  117         01652   	MOV	C,A
   033.154  175         01653   	MOV	A,L	(A) = group number
   033.155  154         01654   	MOV	L,H
   033.156  046 000     01655   	MVI	H,0	(HL) = (0, CSI)
   033.160  104         01656   	MOV	B,H	(BC) = (0, SPG)
                        01657   *	Compute sector number by adding SPG 'BLock Number' Times
   033.161  011         01658   PDI1	DAD	B	add
   033.162  075         01659   	DCR	A
   033.163  302 161 033 01660   	JNZ	PDI1	more to go
   033.166  072 157 102 01661   	LDA	AIO.CNT	(A) = count
   033.171  110         01662   	MOV	C,B	(C) = 0
   033.172  107         01663   	MOV	B,A	(B) = sector count
   033.173  257         01664   	XRA	A	clear (A)
   033.174  311         01665   	RET
                        01666   	
                        01667   **	REL - relocate code
                        01668   *	REL processes a relocation list
                        01669   *
                        01670   *	ENTRY	(BC) = displacement from addresses
                        01671   *		(DE) = reloaction factor (from current address)
                        01672   *		(HL) = FWA relocation list
                        01673   *	EXIT	None
                        01674   *	USES	All
                        01675
   033.175  120         01676   REL.	MOV	D,B	Entry for code displace = rel factor
   033.176  131         01677   	MOV	E,C
                        01678   	
   033.177  325         01679   REL	PUSH	D	Save relocation factor
   033.200  136         01680   	MOV	E,M	
   033.201  043         01681   	INX	H
   033.202  126         01682   	MOV	D,M
   033.203  043         01683   	INX	H	(DE) = relative address of word to relocate
   033.204  172         01684   	MOV	A,D
   033.205  263         01685   	ORA	E
   033.206  302 213 033 01686   	JNZ	REL1	More to do
   033.211  321         01687   	POP	D
   033.212  311         01688   	RET		Exit
                        01689   	
                        01690   *	(DE) = index of word to relocate
                        01691   *	(HL) = relocation table address
                        01692   *	(BC) = code displacement factor
                        01693   *	((SP)) = code relocation factor
                        01694
   033.213  353         01695   REL1	XCHG
   033.214  011         01696   	DAD	B	(HL) = absolute address of word to relocate
   033.215  353         01697   	XCHG		(DE) = abs code address, (HL) = rel table addr
   033.216  343         01698   	XTHL		(HL) = code rel factor
   033.217  032         01699   	LDAX	D
   033.220  205         01700   	ADD	L	Relocate word of code
   033.221  022         01701   	STAX	D
   033.222  023         01702   	INX	D
   033.223  032         01703   	LDAX	D
   033.224  214         01704   	ADC	H
   033.225  022         01705   	STAX	D	Relocate
   033.226  353         01706   	XCHG		(DE) = relocation factor
   033.227  341         01707   	POP	H	(HL) = relocation table entry address
   033.230  303 177 033 01708   	JMP	REL	Do It again
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   31

                        01709   	
                        01710
                        01711   **	TFE - Test for EOF
                        01712   *
                        01713   *	TFE checks for end of file - indicated by
                        01714   *	  1) AIO.CGN = AIO.LGN
                        01715   *	  2) AIO.CSI = AIO.LSI
                        01716   *
                        01717   *	ENTRY	None
                        01718   *	EXIT	'Z' clear if NOT EOF
                        01719   *		(A) = 0
                        01720   *		'Z' set if EOF
                        01721   *		'C' set
                        01722   *		(A) = EC.EOF
                        01723   *	USES	A,F,H,L
                        01724
   033.233  052 120 102 01725   TFE	LHLD	AIO.LGN
   000.000              01726   	ERRNZ	AIO.LSI-AIO.LGN-1
   033.236  072 116 102 01727   	LDA	AIO.CGN
   033.241  275         01728   	CMP	L
   033.242  076 000     01729   	MVI	A,0
   033.244  300         01730   	RNE		Not EOF
   033.245  072 117 102 01731   	LDA	AIO.CSI
   033.250  274         01732   	CMP	H
   033.251  076 000     01733   	MVI	A,0
   033.253  300         01734   	RNE		Not EOF
   033.254  076 003     01735   	MVI	A,EC.EOF*2+1	set EOF code
   033.256  311         01736   	RET		
                        01737
                        01738   **	RUC - restore user code
                        01739   *	RCU restores the user program code which was swapped
                        01740   *	for the OVL code.  Since RUC resides in the OVL area,
                        01741   *	it may not retrun after the disk I/O call
                        01742   *
                        01743   *	ENTRY	None
                        01744   *	EXIT	None
                        01745   *	Uses	None
                        01746
   033.257  315 054 031 01747   RUC	CALL	$SAVALL	Save registers
   033.262  041 047 031 01748   	LXI	H,$RSTALL
   033.265  345         01749   	PUSH	H	Resturn via $RSTALL
   033.266  041 374 040 01750   	LXI	H,S.OVLFL
   033.271  176         01751   	MOV	A,M
   033.272  247         01752   	ANA	A
   000.000              01753   	ERRNZ	OVL.UCS-200Q
   033.273  360         01754   	RP			Not swapped
   033.274  346 176     01755   	ANI	377Q-OVL.UCS-OVL.IN	Restore user code, remove OVL
   033.276  167         01756   	MOV	M,A
                        01757   *	Restore user code
   033.277  052 377 040 01758   	LHLD	S.UCSL
   033.302  104         01759   	MOV	B,H
   033.303  115         01760   	MOV	C,L	(BC) = COUNT
   033.304  052 375 040 01761   	LHLD	S.UCSF
   033.307  353         01762   	XCHG		(DE) = ADDRESS
   033.310  052 005 041 01763   	LHLD	S.SSN	(HL) = sector for swap
   033.313  303 275 031 01764   	JMP	SREAD	Read and exit.
                        01765   	
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   32

                        01766   **	SYDD - system disk device driver
                        01767   *	SYDD is the HDOS system H17 device driver
                        01768   *
                        01769   *	ENTRY	(A) = DC.XXX function code
                        01770   *		Other registers set as needed by function
                        01771   *		Registers set by function
                        01772   *		'C' set, error
                        01773   *		(A) = error code
                        01774   *	USES	All
                        01775
   033.316              01776   R.SYDD	EQU	*
   000.000              01777   	ERRNZ	DC.REA
   033.316  247         01778   	ANA	A
   033.317  312 147 040 01779   	JZ	D.READ
   000.000              01780   	ERRNZ	DC.WRI-1
   033.322  075         01781   	DCR	A
   033.323  312 155 040 01782   	JZ	D.WRITE
   000.000              01783   	ERRNZ	DC.RER-2
   033.326  075         01784   	DCR	A
   033.327  312 152 040 01785   	JZ	D.READR	READ regardless
   033.332  376 005     01786   	CPI	DC.ABT-2
   033.334  332 136 040 01787   	JC	D.XOK	Is not abort or mount, ignore
   000.000              01788   	ERRNZ	DC.MOU-DC.ABT-1
   033.337  312 141 040 01789   	JE	D.ABORT	is abort
   033.342  303 133 040 01790   	JMP	D.MOUNT
                        01791
                        01792   ***	Mount - mount new device
                        01793   *
                        01794   *	Mount processes device dependent mounting of new media
                        01795   *
                        01796   *	The volume serial (number?) is read into the volume table
                        01797   *	and the heads are homed.
                        01798   *
                        01799   *	ENTRY 	(L) = volume number (if any)
                        01800   *	EXIT	(not specified in source)
                        01801   *	USES	(Not specified in source)
                        01802
   033.345              01803   R.MOUNT	EQU	*
   033.345  105         01804   	MOV	B,L	(B) = volume serial
   033.346  041 000 000 01805   	LXI	H,0	Set sector index
   033.351  315 205 040 01806   	CALL	D.SDP	Set device parameters
   033.354  315 213 040 01807   	CALL	D.STZ	Seek track 0
   033.357  052 247 040 01808   	LHLD	D.VOLPT
   033.362  160         01809   	MOV	M,B	Set volume number
   033.363  303 136 040 01810   	JMP	D.XOK	Exit with stuff ok
                        01811   	
                        01812   ***	ABORT - abort any active I/O
                        01813   *	Abort causes any on-going I/O to be aborted
                        01814
   033.366              01815   R.ABORT	EQU	*
   033.366  315 205 040 01816   	CALL	D.SDP	Set device parameters
   033.371  315 213 040 01817   	CALL	D.STZ	Seek track zero
   033.374              01818   .	SET	R.XOK	Implicit reference to R.XOK
                        01819   *	JMP	D.XOK	Exit as if ok (note: source has line commented out)
                        01820
                        01821   ***	XOK - exit with all ok flag
                        01822
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   33

   033.374  257         01823   R.XOK	XRA	A
   033.375  365         01824   R.XIT	PUSH	PSW	Save status
   033.376  072 244 040 01825   XIT1	LDA	D.DLYHS
   034.001  247         01826   	ANA	A
   034.002  302 376 033 01827   	JNZ	XIT1	Wait for hardware delays
   034.005  363         01828   	DI		Lock out clock
   034.006  072 242 040 01829   	LDA	D.DVCTL
   034.011  346 220     01830   	ANI	DF.MO+DF.WR	Remove device select
   034.013  323 177     01831   	OUT	DP.DC	Deselect motor
   034.015  062 242 040 01832   	STA	D.DVCTL	update byte
   034.020  052 110 040 01833   	LHLD	D.XITA
   034.023  042 243 040 01834   	SHLD	D.DLYMO	Set 120/2 seconds of motor on
   000.000              01835   	ERRNZ	D.DLYHS-D.DLYMO-1	Set 7*2 mS of head unsettle
   034.026  361         01836   	POP	PSW
   034.027  373         01837   EIXIT	EI		Restore interrups
   034.030  311         01838   	RET
                        01839
                        01840   ***	Clock - Process clock interrupts
                        01841   *
   034.031  072 033 040 01842   CLOCK	LDA	.TICCNT
   034.034  017         01843   	RRC
   034.035  330         01844   	RC		Not even
   034.036  247         01845   	ANA	A
   034.037  041 243 040 01846   	LXI	H,D.DLYMO
   034.042  302 070 034 01847   	JNZ	CLOCK1	Not half second
   034.045  075         01848   	DCR	A	(A) = -1
   034.046  206         01849   	ADD	M	Subtract one
   034.047  322 070 034 01850   	JNC	CLOCK1	Was zero
   034.052  167         01851   	MOV	M,A	Update
   034.053  302 070 034 01852   	JNZ	CLOCK1	Not time for motor off
   034.056  072 242 040 01853   	LDA	D.DVCTL	
   034.061  346 200     01854   	ANI	DF.WR	Remove all but RAM/WRITE
   034.063  062 242 040 01855   	STA	D.DVCTL
   034.066  323 177     01856   	OUT	DP.DC	Off motor
   034.070  043         01857   CLOCK1	INX	H	(HL) = $DLYHS
   000.000              01858   	ERRNZ	D.DLYHS-D.DLYMO-1
   034.071  176         01859   	MOV	A,M	(A) = D.DLYHS
   034.072  326 001     01860   	SUI	1
   034.074  330         01861   	RC		Was zero
   034.075  167         01862   	MOV	M,A
   034.076  311         01863   	RET	
                        01864   	
                        01865   ***	READ - read from disk
                        01866   *
                        01867   *	ENTRY	(BC) = count
                        01868   *		(DE) = address
                        01869   *		(HL) = block number
                        01870   *		Interrupts enabled
                        01871   *	EXIT	(DE) =next unused address
                        01872   *		Interrupts disabled
                        01873   *	USES	All
                        01874
   034.077  345         01875   R.READ	PUSH	H	SAVE (HL)
   034.100  315 205 040 01876   	CALL	D.SDP	SETUP DEVICE PARAMETERS
   034.103  052 273 040 01877   	LHLD	D.OPR
   034.106  043         01878   	INX	H
   034.107  042 273 040 01879   	SHLD	D.OPR	COUNT OPERATION
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   34

                        01880   	
                        01881   *	read to read sector
                        01882   *	(BC) = amount
                        01883   *	(DE) = address
                        01884   *	((SP)) = sector number
                        01885
   034.112  341         01886   READ1	POP	H	(HL) = sector number
   034.113  325         01887   	PUSH	D	Save address
   034.114  171         01888   	MOV	A,C	Adjust (B) so that (B) = # of whole or partial
   034.115  247         01889   	ANA	A	sectors to read. (C) = bytes of last sector to
   034.116  312 122 034 01890   	JZ	READ1.5	read. (C) = 0 if to read entire last sector
   034.121  004         01891   	INR	B
                        01892
                        01893   **	**** NOTE ****
                        01894   *	This code runs with interrrupts disabled from here on
                        01895
   034.122  305         01896   READ1.5	PUSH	B	Save count
   034.123  315 163 040 01897   	CALL	D.DTS	Decode track and sector
   034.126  076 001     01898   READ2	MVI	A,1	(A) = delay count for start
                        01899   *	Look for right sector
                        01900   *	(A) = delay count before search
                        01901
   034.130  315 216 040 01902   READ2.4	CALL	D.UDLY	Delay some uS
   034.133  315 177 040 01903   	CALL 	D.LPS	Locate proper sector
   034.136  332 300 034 01904   	JC	READ7	ERROR
   034.141  301         01905   	POP	B	(BC) = count
   034.142  341         01906   	POP	H	(HL) = address for data
                        01907   	
                        01908   *	check amount to read
                        01909
   034.143  170         01910   READ3	MOV	A,B
   034.144  261         01911   	ORA	C
   034.145  312 315 034 01912   	JZ	READ8	No more to read
   034.150  345         01913   	PUSH	H
   034.151  305         01914   	PUSH	B	Save count and address in case of error
   034.152  005         01915   	DCR	B	See if on last (maybe partial) sector
   034.153  312 160 034 01916   	JZ	READ3.5	On last sector, read (C) count
                        01917   ***** Start of page 43
   034.156  016 000     01918   	MVI	C,0	will read all 256 bytes
   034.160  101         01919   READ3.5	MOV	B,C	(B) = # to read +1, (C) = # to skip
   034.161  315 221 040 01920   	CALL	D.WSC	Wait for sync character
   034.164  332 261 034 01921   	JC	READ71	Didn't get one
                        01922
                        01923   *	READ DATA
   034.167  315 202 040 01924   READ4	CALL	D.RDB	READ BYTE
   034.172  167         01925   	MOV	M,A	STORE
   034.173  043         01926   	INX	H
   034.174  005         01927   	DCR	B
   034.175  302 167 034 01928   	JNZ	READ4	MORE TO GO
   034.200  171         01929   	MOV	A,C
   034.201  247         01930   	ANA	A
   034.202  312 214 034 01931   	JZ	READ6	NONE TO DISCARD
                        01932   	
                        01933   *	READ, CHECKSUM, AND DISCARD DATA
   034.205  315 202 040 01934   READ5	CALL	D.RDB
   034.210  014         01935   	INR	C
   034.211  302 205 034 01936   	JNZ	READ5
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   35

   034.214  102         01937   READ6	MOV	B,D	(B) = CHECKSUM
   034.215  315 202 040 01938   	CALL	D.RDB
   034.220  270         01939   	CMP	B
   034.221  302 272 034 01940   	JNE	READ72	CHECKSUM ERROR
                        01941
                        01942   *	GOT GOOD SECTOR
   034.224  301         01943   	POP	B	(BC) = OLD COUNT
   034.225  005         01944   	DCR	B	COUNT SECTOR READ
   034.226  312 315 034 01945   	JZ	READ8	JUST READ LAST ONE
                        01946   	
                        01947   *	HAVE MORE TO READ
   034.231  343         01948   	XTHL		SAVE ADDRESS
   034.232  305         01949   	PUSH	B	SAVE COUNT
   034.233  041 241 040 01950   	LXI	H,D.TS
   034.236  064         01951   	INR	M	COUNT SECTOR
   034.237  076 012     01952   	MVI	A,10
   034.241  226         01953   	SUB	M
   034.242  076 000     01954   	MVI	A,0
   000.000              01955   	ERRNZ	30*64*2/15-1000A	(A) = time to delay for 30 char's
   034.244  302 126 034 01956   	JNE	READ2,4	Not at end of track
   034.247  167         01957   	MOV	M,A	Sector # = 0
   000.000              01958   	ERRNZ	D.TS-D.TT-1
   034.250  053         01959   	DCX	H
   034.251  064         01960   	INR	M
   034.252  373         01961   	EI		Restore interrupts until *STS* called
   034.253  315 166 040 01962   	CALL	D.SDT	Seek desired track
   034.256  303 126 034 01963   	JMP 	READ2
                        01964   	
                        01965   *	Can't get data, header or checksum problem
   034.261  041 265 040 01966   READ71	LXI	H,D.E.MDS	Missing data sync error
   034.264  315 232 040 01967   	CALL	D.ERRT
   034.267  303 300 034 01968   	JMP	READ7
   034.272  041 267 040 01969   READ72	LXI	H,D.E.CHK	CHecksum error
   034.275  315 232 040 01970   	CALL	D.ERRT
                        01971   	
   034.300  315 160 040 01972   READ7	CALL	D.CDE	Count disk error
   034.303  322 126 034 01973   	JNC	READ2	Try again
   034.306  301         01974   	POP	B
   034.307  321         01975   	POP	D
   034.310  076 022     01976   	MVI	A,EC.RF	Read failure
   034.312  303 144 040 01977   	JMP	D.XIT	Too many errors, too bad
                        01978   	
                        01979   * 	Entire read was ok
   034.315  341         01980   READ8	POP	H	Clean stack
   034.316  303 136 040 01981   	JMP	D.XOK	Exit ok
                        01982   	
                        01983   ***	READR - read disk regardless of volume protection
                        01984   *
                        01985   *	ENTRY	(BC) = count
                        01986   *		(DE) = address
                        01987   *		(HL) = block #
                        01988   *	EXIT	(DE) = next unused address
                        01989   *	USES	All
                        01990
   034.321  345         01991   R.READR	PUSH	H	Save (HL)
   034.322  315 205 040 01992   	CALL	D.SDP	Setup device parameters
   034.325  041 320 031 01993   	LXI	H,ZEROS
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   36

   034.330  042 247 040 01994   	SHLD	D.VOLPT
   034.333  303 112 034 01995   	JMP	READ1	Process as regular read
                        01996   	
                        01997   ***	WRITE - process disk write
                        01998   *
                        01999   *	ENTRY	(BC) = count
                        02000   *		(DE) = address
                        02001   *		(HL) = block #
                        02002   *	EXIT	(LINK) = last block #
                        02003   *	USES	All
                        02004
   034.336              02005   R.WRITE	EQU	*
   034.336  345         02006   	PUSH	H	Save block #
   034.337  315 205 040 02007   	CALL	D.SDP	Set device parameters
   034.342  052 275 040 02008   	LHLD	D.OPW
   034.345  043         02009   	INX	H
   034.346  042 275 040 02010   	SHLD	D.OPW	Count operation
   034.351  333 177     02011   	IN	DP.DC	See if dick write protected
   034.353  346 004     02012   	ANI	DF.WP
   034.355  067         02013   	STC
   034.356  076 025     02014   	MVI	A,EC.WP
   034.360  302 132 035 02015   	JNZ	WRITE8	Disk is write protected
                        02016   	
                        02017   *** Ready to write sector
                        02018   *
                        02019   *  (BC) = count
                        02020   *  (DE) = address
                        02021   *   ((SP)) = sector number
                        02022
   034.363  041 377 000 02023   	LXI	H,377Q
   034.366  011         02024   	DAD	B
   034.367  104         02025   	MOV	B,H	(B) = # sectors to write
                        02026   	
   034.370  341         02027   WRITE1	POP	H	(HL) = sector number
   034.371  325         02028   	PUSH	D	Save address
                        02029   	
                        02030   *	** NOTE **
                        02031   * This code runs with interrupts disabled form this point on
   034.372  315 163 040 02032   	CALL	D.DTS	Determine track and sector
   034.375  076 001     02033   WRITE2	MVI	A,1	(A) = short delay count
                        02034
                        02035   * find right sector (A0 = delay count
   034.377  315 216 040 02036   WRIT2.5	CALL	D.UDLY	Delay some microsecs
   035.002  305         02037   	PUSH	B	Save count
   035.003  315 177 040 02038   	CALL	D.LPS	Locate proper sector
   035.006  301         02039   	POP	B	(BC) = count
   035.007  332 122 035 02040   	JC	WRITE7	Can't find it
   035.012  341         02041   	POP	H	(HL) = address
   035.013  072 112 040 02042   	LDA	D.WRITA	(A) = guardband delay
   035.016  075         02043   WRITE4	DCR	A
   035.017  302 016 035 02044   	JNZ	WRITE4	Pause over guardband
   035.022  072 113 040 02045   	LDA	D.WRITB
   035.025  117         02046   	MOV	C,A	(C) = # of 00 characters
   035.026  072 114 040 02047   	LDA	D.WRITC	(A) = 128/2 = two character times before writing
   035.031  315 224 040 02048   	CALL	D.WSP	Write sync pattern
                        02049
   035.034  176         02050   WRITE5	MOV	A,M
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   37

   035.035  315 227 040 02051   	CALL	D.WNB
   035.040  043         02052   	INX	H
   035.041  015         02053   	DCR	C
   035.042  302 034 035 02054   	JNZ	WRITE5	Not done yet so loop
   035.045  172         02055   	MOV	A,D	(A) = checksum
   035.046  315 227 040 02056   	CALL	D.WNB	Write checksum
                        02057   	
                        02058   *	Have completed writing, leave write-gate open for 3 character times
                        02059   *	to finish tunnel erasing
                        02060
   035.051  315 227 040 02061   	CALL 	D.WNB
   035.054  315 227 040 02062   	CALL	D.WNB
   035.057  315 227 040 02063   	CALL	D.WNB
   035.062  072 242 040 02064   	LDA	D.DVCTL
   035.065  323 177     02065   	OUT	DP.DC	Off disk control
   035.067  005         02066   	DCR	B
   035.070  312 136 040 02067   	JZ	D.XOK	All done
   035.073  345         02068   	PUSH	H	SAVE ADDRESS
   035.074  041 241 040 02069   	LXI	H,D.TS
   035.077  064         02070   	INR	M
   035.100  076 012     02071   	MVI	A,10
   035.102  226         02072   	SUB	M
   035.103  076 000     02073   	MVI	A,0
   000.000              02074   	ERRNZ	30*64*2/15-1000A	(A) = ct to delay 30 character x
   035.105  302 377 034 02075   	JNZ	WRIT2.5	Not at end of track
                        02076   	
                        02077   *	move to next track
   000.000              02078   	ERRNZ	D.TS-D.TT-1
   035.110  167         02079   	MOV	M,A	clear current sector index
   035.111  053         02080   	DCX	H
   035.112  064         02081   	INR	M
   035.113  373         02082   	EI		Restore interrupts until *STS* call
   035.114  315 166 040 02083   	CALL	D.SDT	Seek desired track
   035.117  303 375 034 02084   	JMP	WRITE2
                        02085   	
                        02086   *	ERROR
   035.122  315 160 040 02087   WRITE7	CALL	D.CDE	Count disk error
   035.125  322 375 034 02088   	JNC	WRITE2	try again
   035.130  076 023     02089   	MVI	A,EC.WF	write failure
   035.132  341         02090   WRITE8	POP	H	restore stack
   035.133  303 144 040 02091   	JMP	D.XIT	Too many .. try again
                        02092   	
                        02093   ***	CDE - count disk errors
                        02094   *	CDE is called when a disk soft error occurs.  If there have
                        02095   *	been 10 soft errors for this operation then a hard error
                        02096   *	is flagged.
                        02097   *
                        02098   *	ENTRY	None
                        02099   *	EXIT	'C' set if hard error
                        02100   *		Interrupts disabled
                        02101   *	USES	A,F,H,L
                        02102
   035.136  373         02103   R.CDE	EI
   035.137  315 213 040 02104   	CALL	D.STZ	Seek track zero
   035.142  315 166 040 02105   	CALL	D.SDT	seek desired track
   035.145  247         02106   	ANA	A	Clear carry
   035.146  052 262 040 02107   	LHLD	D.SECNT
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   38

   035.151  043         02108   	INX	H
   035.152  042 262 040 02109   	SHLD	D.SECNT	Increment count
   035.155  041 264 040 02110   	LXI	H,D.OECNT	(HL) = # operation error count
   035.160  065         02111   	DCR	M
   035.161  360         02112   	RP		Not too many
   035.162  053         02113   	DCX	H	
   035.163  076 366     02114   	MVI	A,-ERPTCNT
   035.165  206         02115   	ADD	M	Remove soft count
   035.166  167         02116   	MOV	M,A
   000.000              02117   	ERRNZ	D.SECNT-D.HECNT-1
   035.167  064         02118   	INR	M	Count hard error
   035.170  067         02119   	STC
   035.171  311         02120   	RET		Exit with 'C' set
                        02121   	
                        02122   ***	DTS - decode track and sector
                        02123   *	DTS decodes the track and sector number from
                        02124   *	the supplied sector index
                        02125   *
                        02126   *	ENTRY	(HL) = sector index
                        02127   *		Interrupts enabled
                        02128   *	EXIT	D.TS = sector number
                        02129   *		D.TT = track number
                        02130   *		Interrupts disabled
                        02131   *	USES	A,F,H,L
                        02132
   035.172  305         02133   R.DTS	PUSH	B	Save (BC)
   035.173  001 366 377 02134   	LXI	B,-10	
   035.176  170         02135   	MOV	A,B	(A) = 377Q
   035.177  074         02136   DTS1	INR	A
   035.200  011         02137   	DAD	B
   035.201  332 177 035 02138   	JC	DTS1
   035.204  062 240 040 02139   	STA	D.TT	Set track number
   035.207  175         02140   	MOV	A,L
   035.210  306 012     02141   	ADI	10
   035.212  062 241 040 02142   	STA	D.TS	Set sector	
   035.215  301         02143   	POP	B	restore (BC)
   035.216  303 225 035 02144   	JMP	R.SDT	Seek desired track
                        02145
                        02146   *** 	SDT - set desired track
                        02147   *	SDT moves the disk arm to the desired (D.TT) track
                        02148   *
                        02149   *	ENTRY	None
                        02150   *	EXIT	None
                        02151   *	USES	A,F,H,L
                        02152
                        02153   *	Move arm in
   035.221  064         02154   SDT3	INR	M
   035.222  315 171 040 02155   	CALL	D.MAI
                        02156   	
   035.225  052 245 040 02157   R.SDT	LHLD	D.TRKPT
   035.230  072 240 040 02158   	LDA	D.TT
   035.233  276         02159   	CMP	M
   035.234  312 210 040 02160   	JE	D.STS	Got there
   035.237  362 221 035 02161   	JP	SDT3	Must move in
                        02162   	
                        02163   *	Move arm out
   035.242  065         02164   SDT1	DCR	M	update track number
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   39

   035.243  315 174 040 02165   	CALL	D.MAO	move arm out
   035.246  303 225 035 02166   	JMP	R.SDT	see if arm there yet
                        02167   	
                        02168   ***	MAI - move disk arm in one track
                        02169   *
                        02170   *	ENTRY	None
                        02171   *	EXIT	None
                        02172   *	USES	A,F
                        02173
                        02174   ***	MAO - move disk arm out
                        02175   *
                        02176   *	ENTRY	None
                        02177   *	EXIT	None
                        02178   *	USES	A,F
                        02179
   035.251  076 040     02180   R.MAI	MVI	A,DF.DI	Set direction	
   035.253  376         02181   	DB	MI.CPI	Gobble XRA instruction
                        02182
   035.254  257         02183   R.MAO	XRA	A	Set direction
   035.255  345         02184   	PUSH	H
   035.256  147         02185   	MOV	H,A
   035.257  072 242 040 02186   	LDA	D.DVCTL
   035.262  346 237     02187   	ANI	377Q-DF.DI-DF.ST
   035.264  264         02188   	ORA	H	Set direction
   035.265  323 177     02189   	OUT	DP.DC	set direction
   035.267  341         02190   	POP	H
   035.270  366 100     02191   	ORI	DF.ST
   035.272  323 177     02192   	OUT	DP.DC	Start step
   035.274  356 100     02193   	XRI	DF.ST
   035.276  323 177     02194   	OUT	DP.DC	Complete step
   035.300  072 115 040 02195   	LDA	D.MAIA	(A) = MS/2 for track timing
   040.235              02196   .	SET	D.DLY	Set reference to ROM {note period in 1st char}
                        02197   *	JMP	D.DLY	Delay 8 mS
                        02198
                        02199   ***	DLY - delay by front panel clock
                        02200   *
                        02201   ***	MAI - move disk arm in one track
                        02202   *
                        02203   *	ENTRY	(A) = millisecond count/2
                        02204   *	EXIT	None
                        02205   *	USES	A,F
   035.303  345         02206   R.DLY	PUSH	H
   035.304  041 033 040 02207   	LXI	H,.TICCNT
   035.307  206         02208   	ADD	M
   035.310  276         02209   DLY1	CMP	M
   035.311  302 310 035 02210   	JNE	DLY1
   035.314  341         02211   	POP	H
   035.315  311         02212   	RET
                        02213   	
                        02214   ***	LPS - Locate proper sector
                        02215   *	LPS reads over sector headers until the proper sector
                        02216   *	is found.
                        02217   *
                        02218   *	Upon entry, the arm should be positioned over the sector.
                        02219   *
                        02220   *	D.TT = desired track
                        02221   *	D.TS = desired sector
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   40

                        02222   ***	MAI - move disk arm in one track
                        02223   *
                        02224   *	ENTRY	None
                        02225   *	EXIT	Interrrups disabled
                        02226   *		'C' set if error
                        02227   *	USES	All but C
                        02228
   035.316  315 210 040 02229   LPS0	CALL	D.STS	Skip this sector
                        02230
   035.321  072 116 040 02231   R.LPS	LDA	D.LPSA	(A) = #trys for this sector
   035.324  107         02232   	MOV	B,A
   035.325  072 244 040 02233   	LDA	D.DLYHS
   035.330  247         02234   	ANA	A
   035.331  302 316 035 02235   	JNZ	LPS0
                        02236   	
   035.334  363         02237   LPS1	DI
   035.335  315 221 040 02238   	CALL	D.WSC	wait for sync character
   035.340  332 025 036 02239   	JC	LPS3	none
   035.343  052 247 040 02240   	LHLD	D.VOLPT
   035.346  315 202 040 02241   	CALL	D.RDB
   035.351  276         02242   	CMP	M	see if proper volume
   035.352  302 032 036 02243   	JNE	LPS4	wrong volume
   035.355  041 240 040 02244   	LXI	H,D.TT
   035.360  315 202 040 02245   	CALL	D.RDB
   035.363  276         02246   	CMP	M	see if proper track
   035.364  302 037 036 02247   	JNE	LPS5	wrong track
   000.000              02248   	ERRNZ	D.TS-D.TT-1
   035.367  043         02249   	INX	H
   035.370  315 202 040 02250   	CALL	D.RDB
   035.373  276         02251   	CMP	M
   035.374  302 014 036 02252   	JNE	LPS2	wrong sector
                        02253   	
                        02254   *	got right sector, read checksum
   035.377  142         02255   	MOV	H,D
   036.000  315 202 040 02256   	CALL	D.RDB
   036.003  274         02257   	CMP	H
   036.004  310         02258   	RE		ALL OK
   036.005  056 270     02259   	MVI	L,#D.E.HCK	Header checksum error
   036.007  046 040     02260   LPS1.5	MVI	H,D.ERR/256	(HL) = error byte address
   000.040              02261   .	SET	D.ERR/256
   000.000              02262   	ERRNZ	D.ERRL/256-.	Must in same bank
   036.011  315 232 040 02263   	CALL	D.ERRT	Count error
                        02264   	
                        02265   *	Wrong sector or bad data. Try some more
                        02266
   036.014  315 210 040 02267   LPS2	CALL	D.STS	Skip this sector
   036.017  005         02268   	DCR	B
   036.020  322 334 035 02269   	JNC	LPS1	Try again
   036.023  067         02270   	STC		Enough trys
   036.024  311         02271   	RET		ERROR
                        02272   	
   036.025  056 266     02273   LPS3	MVI	L,#D.E.HSY	Header sync error
   036.027  303 007 036 02274   	JMP	LPS1.5
                        02275   	
   036.032  056 271     02276   LPS4	MVI	L,#D.E.VOL	Bad volume number
   036.034  303 007 036 02277   	JMP	LPS1.5	count error
                        02278   	
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   41

   036.037  056 272     02279   LPS5	MVI	L,#D.E.TRK	Bad track number
   036.041  303 007 036 02280   	JMP	LPS1.5
                        02281
                        02282   ***	RDB - Read byte from disk
                        02283   *	RDB reads the next byte from the disk
                        02284   *
                        02285   *	ENTRY	(D) = checksum
                        02286   *	EXIT	(A) = byte
                        02287   *		(D) updated
                        02288   *	USES	A,F,D,E
                        02289
   036.044  333 175     02290   R.RDB	IN	UP.ST
   000.000              02291   	ERRNZ	UF.RDA-1
   036.046  037         02292   	RAR
   036.047  322 044 036 02293   	JNC	R.RDB	Not ready yet
   036.052  333 174     02294   	IN	UP.DP	(A) = data
   036.054  137         02295   	MOV	E,A
   036.055  252         02296   	XRA	D	Differ
   036.056  007         02297   	RLC		Shift left
   036.057  127         02298   	MOV	D,A	Replace
   036.060  173         02299   	MOV	A,E	(A) = char
   036.061  311         02300   	RET
                        02301   	
                        02302   ***	SDP - set device parameters
                        02303   *	SDP sets up arguements for the specific unit
                        02304   *	D.DVCTL = motor on, device select
                        02305   *	D.TRKPT = address of device track number
                        02306   *
                        02307   *	ENTRY	AIO.UNI = unit number
                        02308   *	EXIT	(HL)= (D.TRKPT)
                        02309   *	USES	A,F,H,L
                        02310
   036.062  076 012     02311   R.SDP	MVI	A,ERPTCNT
   036.064  062 264 040 02312   	STA	D.OECNT	Set max error count for operation	
   036.067  072 130 102 02313   	LDA	AIO.UNI
   036.072  365         02314   	PUSH	PSW	save unit number
   036.073  074         02315   	INR	A	(A) =1 if Dev 0, 2 if dev 1
   036.074  207         02316   	ADD	A
   000.000              02317   	ERRNZ	DF.DSO-2	Select 0 or 1
   000.000              02318   	ERRNZ	DF.DS1-4	
   036.075  363         02319   	DI		Interlock clock interrupts
   036.076  041 242 040 02320   	LXI	H,D.DVCTL
   036.101  256         02321   	XRA	M
   036.102  346 177     02322   	ANI	377Q-DF.WR
   036.104  256         02323   	XRA	M	Merge with DF.WR bit from D.DVCTL
   036.105  366 020     02324   	ORI	DF.MO	Motor on
   036.107  167         02325   	MOV	M,A	update
   036.110  323 177     02326   	OUT	DP.DC	Select drive, load head
                        02327   	
                        02328   *	See if heads have been unloaded logn enough to require load delay
   036.112  041 244 040 02329   	LXI	H,D.DLYHS
   036.115  176         02330   	MOV	A,M
   036.116  247         02331   	ANA	A
   036.117  066 000     02332   	MVI	M,0
   036.121  302 130 036 02333   	JNZ	SDP1
   036.124  072 117 040 02334   	LDA	D.SDPA
   036.127  167         02335   	MOV	M,A
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   42

   036.130  053         02336   SDP1	DCX	H
   000.000              02337   	ERRNZ	D.DLYMO-D.DLYHS+1	(HL) = #D.DLYMO
   036.131  176         02338   	MOV	A,M	(A) = motor on delay
   036.132  066 170     02339   	MVI	M,120	60 secs before turn off again
   036.134  247         02340   	ANA	A	'Z' if motor turned off
   036.135  043         02341   	INX	H	(HL) = #D.DLYHS
   036.136  302 145 036 02342   	JNZ	SDP2	Motor is still on
   036.141  072 120 040 02343   	LDA	D.SDPB	(A) = motor wait time (mS/4)
   036.144  167         02344   	MOV	M,A
   036.145  373         02345   SDP2	EI
   036.146  361         02346   	POP	PSW	(A) = unit number
   036.147  207         02347   	ADD	A	(A) = 2*unit number
   036.150  041 251 040 02348   	LXI	H,D.DRVTB
   036.153  205         02349   	ADD	L
   036.154  157         02350   	MOV	L,A	(HL) = address of track entry
   036.155  042 245 040 02351   	SHLD	D.TRKPT
   036.160  043         02352   	INX	H
   036.161  042 247 040 02353   	SHLD	D.VOLPT	set volume number
   036.164  311         02354   	RET
                        02355   	
                        02356   ***	STS - skip this sector
                        02357   *	STS is called to skip the current sector, regardless of where
                        02358   *	the head is positioned.
                        02359   *	
                        02360   *	STS will exit at the beginning of the next sector
                        02361   *
                        02362   *  1. if the head is not over a hole, wait 8 mS while
                        02363   *     hole checking. If no hole in this time, when we are in
                        02364   *     a regular gap.  Wait for the next hole and exit.
                        02365   *
                        02366   *  2. If the head is over a hole or becomes so during the 8 mS wait,
                        02367   *     then wait for the hole to pass.  Wait 12 mS in case of the index
                        02368   *     then wait for the next hole and exit.
                        02369   *
                        02370   *	ENTRY	None
                        02371   *	EXIT	Interrrups disabled
                        02372   *	USES	A,F,H,L
                        02373
   036.165  373         02374   R.STS	EI
   036.166  305         02375   	PUSH	B	save (BC)
   036.167  333 177     02376   	IN	DP.DC
   000.000              02377   	ERRNZ	DF.HD-1
   036.171  037         02378   	RAR
   036.172  332 222 036 02379   	JC	STS2	Am currently over hole
                        02380   	
                        02381   *	No hole yet. Wait 8 mS minimum (10 max) for hole to appear
                        02382
   036.175  041 033 040 02383   	LXI	H,.TICCNT
   036.200  106         02384   	MOV	B,M	(B) = current time
   036.201  333 177     02385   STS1	IN	DP.DC
                        02386   **** LINE 2679 PAGE 54
   036.203  037         02387   	RAR
   000.000              02388   	ERRNZ	DF.HD-1
   036.204  332 222 036 02389   	JC	STS2	Got hole
   036.207  072 121 040 02390   	LDA	D.STSA	(A) = delay count
   036.212  200         02391   	ADD	B	10 mS max, 8mS min
   036.213  276         02392   	CMP	M
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   43

   036.214  302 201 036 02393   	JNE	STS1	8 mS not up yet
   036.217  303 233 036 02394   	JMP	STS3	Am in sector gap
                        02395   	
                        02396   * 	Have hole. Skip it and wait 12 mS
   036.222  315 271 036 02397   STS2	CALL	WNH	Wait for no hole
   036.225  072 122 040 02398   	LDA	D.STSB	(A) = count (10 mS min, 12 mS max)
   036.230  315 235 040 02399   	CALL	D.DLY	Wait
   036.233  301         02400   STS3	POP	B	Restore (BC)
   036.234  363         02401   	DI
                        02402   *	JMP	WHD	Wait hole detect {source disabled}
                        02403
                        02404   ***	WHD - Wait hole detect
                        02405   *	WHD waits until a hole is located
                        02406   *
                        02407   *	ENTRY	None
                        02408   *	EXIT	None
                        02409   *	USES	A,F
                        02410
   036.235  333 177     02411   WHD	IN	DP.DC
   000.000              02412   	ERRNZ	DF.HD-1
   036.237  037         02413   	RAR
   036.240  322 235 036 02414   	JNC	WHD	Wait until found
   036.243  072 123 040 02415   	LDA	D.WHDA	(A) = loop delay count
   036.246  303 216 040 02416   	JMP	D.UDLY
                        02417
                        02418   ***	STZ - seek track zero
                        02419   *	STZ seeks the selected unit arm outwards until it reaches
                        02420   *	Track 0
                        02421   *
                        02422   *	The arm position byte is then updated to 0
                        02423   *
                        02424   *	ENTRY	Interrupts enabled
                        02425   *	EXIT	Interrrups enabled
                        02426   *	USES	A,F,H,L
                        02427
   036.251  315 174 040 02428   STZ0	CALL	D.MAO	Move arm out
   036.254  333 177     02429   R.STZ	IN	DP.DC
   036.256  346 002     02430   	ANI	DF.T0
   036.260  312 251 036 02431   	JZ	STZ0	Not track 0 yet
   036.263  052 245 040 02432   	LHLD	D.TRKPT
   036.266  066 000     02433   	MVI	M,0	Set track pointer
   036.270  311         02434   	RET
                        02435   	
                        02436   ***	WNH - wait for no hole
                        02437   *	WNH waits until the current hole is past
                        02438   *
                        02439   *	ENTRY	None
                        02440   *	EXIT	None
                        02441   *	USES	A,F
                        02442
   036.271  333 177     02443   WNH	IN	DP.DC
   000.000              02444   	ERRNZ	DF.HD-1
   036.273  037         02445   	RAR
   036.274  332 271 036 02446   	JC	WNH	Still hole
   036.277  072 124 040 02447   	LDA	D.WNHA	(A) = debounce count
   036.302              02448   .	SET	R.UDLY	Reference to R.UDLY
                        02449   *	JMP	D.UDLY	Wait a little
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   44

                        02450
                        02451   *** 	UDLY - microsectond delay
                        02452   *	UDLY is called (with interrupts disabled)
                        02453   *	to wait a certain number of microseconds
                        02454   *
                        02455   *	Each time through the delay loop causes a pause of
                        02456   *	15/2.048 uS
                        02457   *
                        02458   *	ENTRY	(A) = loop count (zero taken as 256)
                        02459   *	EXIT	(A) = 0
                        02460   *	USES	A, F
                        02461
   036.302  075         02462   R.UDLY	DCR	A
   036.303  302 302 036 02463   	JNZ	R.UDLY
   036.306  311         02464   	RET
                        02465   	
                        02466   ***	WSC - wait for sync character
                        02467   *	WSC waits for the appearance of a sync character. The disk should be
                        02468   *	selected, moving, and the head should be over the pre-syn zero band.
                        02469   *
                        02470   *	If a sync is not detected in 25 character times, an error is returned.
                        02471   *
                        02472   *	ENTRY	None
                        02473   *	EXIT	'C' clear if ok, sync character read
                        02474   *		(D) = 0 (checksum)
                        02475   *		'C' set if no sync found
                        02476   *	USES	A,F, D
                        02477
   036.307  076 375     02478   R.WSC	MVI	A,C.DSYN
   036.311  323 176     02479   	OUT	UP.SC	
   036.313  333 176     02480   	IN	UP.SR	
   036.315  072 125 040 02481   	LDA	D.WSCA	(A) = NUMBER OF LOOPS IN 25 CHARACTERS
   036.320  127         02482   	MOV	D,A
   036.321  333 177     02483   WSC1	IN	DP.DC
   036.323  346 010     02484   	ANI	DF.SD	See if sync
   036.325  302 336 036 02485   	JNZ	WSC2	got sync
   036.330  025         02486   	DCR	D
   036.331  302 321 036 02487   	JNZ	WSC1	Try some more
                        02488   	
                        02489   *	couldn't find sync
   036.334  067         02490   	STC		Can't find sync	
   036.335  311         02491   	RET
                        02492   	
                        02493   *	Found sync
   036.336  333 174     02494   WSC2	IN 	UP.DP	Gobble sync character
   036.340  026 000     02495   	MVI	D,0	Clear checksum
   036.342  311         02496   	RET
                        02497
                        02498   ***	WSP - write sync pattern
                        02499   *	WSP writes a sync pattern of zeros, followed by a sync character.
                        02500   *
                        02501   *	ENTRY	(A) = initial delay counter
                        02502   *		(C) = # of zero bytes to write
                        02503   *	EXIT	(D) = checksum
                        02504   *		(C) = 0
                        02505   *	USES	A,F,C,D,E
                        02506
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   45

   036.343  075         02507   R.WSP	DCR	A
   036.344  302 343 036 02508   	JNZ	R.WSP	DELAY
                        02509   	
                        02510   *	delay is up on write gate
   036.347  072 242 040 02511   	LDA	D.DVCTL
   000.000              02512   	ERRNZ	DF.WG-1
   036.352  074         02513   	INR	A	Set write gate
   036.353  323 177     02514   	OUT	DP.DC	Set gate
                        02515   	
                        02516   *	Used as an entry point by DDIAG
   036.355  257         02517   WSP1	XRA	A
   036.356  315 227 040 02518   	CALL	D.WNB
   036.361  015         02519   	DCR	C
   036.362  302 355 036 02520   	JNZ	WSP1	Do more
   036.365  076 375     02521   	MVI	A,C.DSYN
   036.367  127         02522   	MOV	D,A	Pre-clear checksum so WNB exits with (D) = 0
   036.370  303 227 040 02523   	JMP	D.WNB	Write next byte
                        02524   	
                        02525   ***	WNB - Write next byte
                        02526   *	WNB write a byte to the disk, assuming that the write gate
                        02527   *	is already selected
                        02528   *
                        02529   *	ENTRY	(A) = character
                        02530   *		(D) = checksum
                        02531   *	EXIT	(D) = checksum
                        02532   *	USES	A,F,D,E
                        02533   	
   036.373  137         02534   R.WNB	MOV	E,A
   036.374  333 175     02535   WNB1	IN	UP.ST
   036.376  247         02536   	ANA	A
   000.000              02537   	ERRNZ	UF.TBM-200Q
   036.377  362 374 036 02538   	JP	WNB1	Not ready	
   037.002  173         02539   	MOV	A,E
   037.003  323 174     02540   	OUT	UP.DP	Out data
   037.005  252         02541   	XRA	D
   037.006  007         02542   	RLC
   037.007  127         02543   	MOV	D,A
   037.010  311         02544   	RET
                        02545   	
   037.011  107 053 123 02546   	DB	'G+S'
                        02547   	
                        02548   ***	Boot code
                        02549   *	Entered to boot system
                        02550
   037.014  363         02551   BOOT	DI		Want no trouble with interrupts!
   037.015  061 200 042 02552   	LXI	SP,STACK	Clear stack
   037.020  001 130 000 02553   	LXI	B,BOOTAL
   037.023  021 132 037 02554   	LXI	D,BOOTA
   037.026  041 110 040 02555   	LXI	H,D.CON
   037.031  315 252 030 02556   	CALL	$MOVE	Move in constants and vectors
                        02557   	
                        02558   *	ZERO WORK FIELD
   037.034  041 240 040 02559   	LXI	H,D.RAM
   037.037  006 037     02560   	MVI	B,D.RAML
   037.041  315 212 031 02561   	CALL	$ZERO	Zero memory
   037.044  062 130 102 02562   	STA	AIO.UNI
   037.047  323 177     02563   	OUT	DP.DC	Off disk
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   46

                        02564
                        02565   *	Setup all interrupt vectors to an EI/RET sequence
   000.000              02566   	ERRNZ	UO.CLK-1
   037.051  074         02567   	INR	A	
   037.052  062 010 040 02568   	STA	.MFLAG
                        02569   	
   037.055  041 037 040 02570   	LXI	H,.UIVEC	(HL) = .UIVEC address, (A) = 1
   037.060  066 303     02571   BOOT2	MVI	M,303Q	
   037.062  043         02572   	INX	H
   037.063  066 027     02573   	MVI	M,#EIXIT
   037.065  043         02574   	INX	H
   037.066  066 034     02575   	MVI	M,EIXIT/256
   037.070  043         02576   	INX	H
   037.071  207         02577   	ADD	A	Shift '1' into (A) left 1
   037.072  362 060 037 02578   	JP	BOOT2	More to go
                        02579   	
                        02580   *	Setup clock interrupts
   037.075  041 031 034 02581   BOOT3	LXI	H,CLOCK
   037.100  042 040 040 02582   	SHLD	.UIVEC+1
   037.103  373         02583   	EI
                        02584   	
                        02585   *	Read boot code
   037.104  315 366 033 02586   	CALL	R.ABORT	
   037.107  021 200 042 02587   	LXI	D,USERFWA
   037.112  001 000 011 02588   	LXI	B,9*256
   037.115  041 000 000 02589   	LXI	H,0
   037.120  315 077 034 02590   	CALL	R.READ	
   037.123  322 200 042 02591   	JNC	USERFWA	
                        02592   	
                        02593   *	WAIT FOR CHARACTER TO BE ENTERED.
   037.126  166         02594   	HLT
   037.127  303 014 037 02595   	JMP	BOOT	Boot again
                        02596   	
                        02597   ****** page 59
                        02598   ***	disk constant and vector initialization table
   037.132              02599   BOOTA	EQU	*
   000.000              02600   	ERRNZ	*-BOOTA+D.CON-D.XITA
   037.132  170 002     02601   	DW	2*256+120	Head unsettle and motor on times
                        02602   	
   000.000              02603   	ERRNZ	*-BOOTA+D.CON-D.WRITA
   037.134  024         02604   	DB	20	Guardband count for write
                        02605   	
   000.000              02606   	ERRNZ	*-BOOTA+D.CON-D.WRITB
   037.135  012         02607   	DB	10	Number of zero characters after hold edge
                        02608   ***** line 2933 on page 59
   000.000              02609   	ERRNZ	*-BOOTA+D.CON-D.WRITC
   037.136  020         02610   	DB	128/8	Two character delay before writing
                        02611   	
   000.000              02612   	ERRNZ	*-BOOTA+D.CON-D.MAIA
   037.137  017         02613   	DB	15	Track-to-track step times
                        02614   	
   000.000              02615   	ERRNZ	*-BOOTA+D.CON-D.LPSA
   037.140  024         02616   	DB	20	Number of trys for correct sector
                        02617   	
   000.000              02618   	ERRNZ	*-BOOTA+D.CON-D.SDPA
   037.141  021         02619   	DB	70/4	70 mS wait for heat settle
                        02620   	
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   47

   000.000              02621   	ERRNZ	*-BOOTA+D.CON-D.SDPB
   037.142  372         02622   	DB	1000/4	1 second wait for motor on
                        02623   	
   000.000              02624   	ERRNZ	*-BOOTA+D.CON-D.STSA
   037.143  005         02625   	DB	8/2+1	mS/2 to wait for index hole
                        02626   	
   000.000              02627   	ERRNZ	*-BOOTA+D.CON-D.STSB
   037.144  007         02628   	DB	12/2+1	mS/2 to wait past index hole
                        02629   	
   000.000              02630   	ERRNZ	*-BOOTA+D.CON-D.WHDA
   037.145  024         02631   	DB	20	UDLY count for hole debounce
                        02632   	
   000.000              02633   	ERRNZ	*-BOOTA+D.CON-D.WNHA
   037.146  024         02634   	DB	20	UDlY count for hole debounce
                        02635   	
   000.000              02636   	ERRNZ	*-BOOTA+D.CON-D.WSCA
   037.147  120         02637   	DB	64*25/20	Loop count for 25 characters
                        02638
                        02639   ***	ERRT - Error test loop
   037.150  064         02640   R.ERRT	INR	M	Count error
   037.151  311         02641   	RET		Exit
                        02642   	
                        02643   *	JMP Vectors
   037.152  303 316 033 02644   	JMP	R.SYDD	D.SYDD (must be first)
   037.155  303 345 033 02645   	JMP	R.MOUNT	D.MOUNT
   037.160  303 374 033 02646   	JMP	R.XOK	D.XOK
   037.163  303 366 033 02647   	JMP	R.ABORT	D.ABORT
   037.166  303 375 033 02648   	JMP	R.XIT	D.XIT
   037.171  303 077 034 02649   	JMP	R.READ	D.READ
   037.174  303 321 034 02650   	JMP	R.READR	D.READR
   037.177  303 336 034 02651   	JMP	R.WRITE	D.WRITE
   037.202  303 136 035 02652   	JMP	R.CDE	D.CDE
   037.205  303 172 035 02653   	JMP	R.DTS	D.DTS
   037.210  303 225 035 02654   	JMP	R.SDT	D.SDT
   037.213  303 251 035 02655   	JMP	R.MAI	D.MAI
   037.216  303 254 035 02656   	JMP	R.MAO	D.MAO
   037.221  303 321 035 02657   	JMP	R.LPS	D.LPS
   037.224  303 044 036 02658   	JMP	R.RDB	D.RDB
   037.227  303 062 036 02659   	JMP	R.SDP	D.SDP
   037.232  303 165 036 02660   	JMP	R.STS	D.STS
   037.235  303 254 036 02661   	JMP	R.STZ	D.STZ
   037.240  303 302 036 02662   	JMP	R.UDLY	D.UDLY
   037.243  303 307 036 02663   	JMP	R.WSC	D.WSC
   037.246  303 343 036 02664   	JMP	R.WSP	D.WSP
   037.251  303 373 036 02665   	JMP	R.WNB	D.WNB
   037.254  303 150 037 02666   	JMP	R.ERRT	D.ERRT
   037.257  303 303 035 02667   	JMP	R.DLY	D.DLY
   000.130              02668   BOOTAL	EQU	*-BOOTA
                        02669
                        02670   ***	DDIAG - initial deive diagnosis
   037.262              02671   DDIAG	EQU	*
   037.262  076 031     02672   	MVI	A,DF.MO+DF.DS2+DF.WG
   037.264  323 177     02673   	OUT	DP.DC	On disk
   037.266  016 372     02674   	MVI	C,250
   037.270  171         02675   	MOV	A,C	(A) = 250
   037.271  315 303 035 02676   	CALL	R.DLY
   037.274  171         02677   	MOV	A,C	(A) = 250
                                                  	HEATH ASM #104.06.00
                                                  	19-Jan-83  Page   48

   037.275  315 303 035 02678   	CALL	R.DLY	delay 1 second
   037.300  363         02679   	DI
   037.301  315 306 037 02680   	CALL	DDIAG0	Do check, return if error
                        02681   	
                        02682   *	Disk Diagnostic error
   037.304  373         02683   	EI
   037.305  166         02684   	HLT
                        02685   	
                        02686   *	Test disk
   037.306  315 355 036 02687   DDIAG0	CALL	WSP1	Write sync pattern
   037.311  001 134 014 02688   	LXI	B,3164
   037.314  076 107     02689   DDIAG1	MVI	A,'G'
   037.316  315 373 036 02690   	CALL	R.WNB	Write byte
   037.321  013         02691   	DCX	B
   037.322  170         02692   	MOV	A,B
   037.323  261         02693   	ORA	C
   037.324  302 314 037 02694   	JNZ	DDIAG1
   037.327  076 030     02695   	MVI	A,30Q
   037.331  323 177     02696   	OUT	DP.DC	Off write select
                        02697   	
                        02698   *	Now try read
   037.333  076 333     02699   	MVI	A,219
   037.335  062 125 040 02700   	STA	D.WSCA	Wait for 68 chars max
   037.340  315 307 036 02701   	CALL	R.WSC	Wait for sync detect
   037.343  330         02702   	RC		Error
   037.344  001 132 014 02703   	LXI	B,3164-2	Allow USART to gobble two during write
   037.347  315 044 036 02704   DDIAG2	CALL	R.RDB	Read byte
   037.352  376 107     02705   	CPI	'G'
   037.354  300         02706   	RNE		Error
   037.355  013         02707   	DCX	B
   037.356  170         02708   	MOV	A,B
   037.357  261         02709   	ORA	C
   037.360  302 347 037 02710   	JNZ	DDIAG2
   037.363  373         02711   	EI		Restore interrupts
   037.364  166         02712   	HLT		Ok
                        02713   	
   037.365  000 112 107 02714   	DB	0,'JGL',0	Error routing code
   037.372  110 105 101 02715   	DB	'HEATH'
   037.377  000         02716   	DB	0
                        02717   	
   377.377              02718   	ERRPL	*-40001A	Overflow
   040.000  000         02719   	END	START


02719 Statements Assembled
36436 Bytes Free
00001 Errors Detected
                                                                                                                                                                                                                                                                     	HEATH XREF #104.06.00
SYMBOL TABLE                                      	19-Jan-83   PAGE   49

  $CDEHL  030216      $CHL    030224      $COMP   030060      $DADA   030072  
  $DADA.  030101      $DU66   030106      $HLIHL  030211      $INDL   030234  
  $MOVE   030252      $MU10   030324      $MU66   030337      $MU86   031007  
  $RSTALL 031047      $SAVALL 031054      $TBL1   031113      $TBL2   031133  
  $TBLS   031111      $TBRA   031076      $TJMP   031061      $TJMP.  031062  
  $TYPTX  031136      $TYPTX. 031144      $UDD    031157      $WDR    031222  
  $WDR1   031231      $WER    031241      $ZERO   031212      .       036302  
  .ABUSS  040024      .ALARM  002136      .ALEDS  040013      .CHFLG  000060  
  .CLEAR  000055      .CLEARA 000056      .CLOSE  000046      .CLRCO  000007  
  .CONSL  000006      .CRC    002347      .CRCSUM 040027      .CTC    002172  
  .CTLC   000041      .CTLFLG 040011      .DECODE 000053      .DELET  000050  
  .DISMT  000061      .DLEDS  040021      .DLY    000053      .DOD    003122  
  .DODA   003356      .DSPMOD 040007      .DSPROT 040006      .DUMP   001374  
  .ERROR  000057      .EXIT   000000      .HORN   002140      .IDENT  000000  
  .IOWRK  040002      .LINK   000040      .LOAD   001267      .MFLAG  040010  
  .NAME   000054      .OPENC  000045      .OPENR  000042      .OPENU  000044  
  .OPENW  000043      .PCHL   002264      .POSIT  000047      .PRINT  000003  
  .RCK    003260      .READ   000004      .REGI   040005      .REGPTR 040035  
  .RENAM  000051      .RNB    002331      .RNP    002325      .SCIN   000001  
  .SCOUT  000002      .SETTP  000052      .SRS    002265      .START  040000  
  .SYSRES 000010      .TICCNT 040033      .TPERR  002205      .TPERRX 040031  
  .UIVEC  040037      .WNB    003024      .WNP    003017      .WRITE  000005  
  AIO.CGN 102116      AIO.CHA 102164      AIO.CNT 102157      AIO.CSI 102117  
  AIO.DDA 041046      AIO.DES 102124      AIO.DEV 102126      AIO.DIR 102131  
  AIO.DTA 102122      AIO.EOF 102161      AIO.EOM 102160      AIO.FLG 102112  
  AIO.GRT 102113      AIO.LGN 102120      AIO.LSI 102121      AIO.SPG 102115  
  AIO.TFP 102162      AIO.UNI 102130      AIO.VEC 041043      BOOT    037014  
  BOOT2   037060      BOOT3   037075      BOOTA   037132      BOOTAL  000130  
  C.DSYN  000375      CB.CLI  000100      CB.MTL  000040      CB.SPK  000200  
  CB.SSI  000020      CDB.H84 000001      CDB.H85 000000      CFF     031354  
  CLOCK   034031      CLOCK1  034070      CO.FLG  000001      CS.FLG  000200  
  CSL.CHR 000001      CSL.ECH 000200      CSL.WRP 000002      CTP.2SB 000010  
  CTP.BKM 000002      CTP.BKS 000200      CTP.MLI 000040      CTP.MLO 000020  
  CTP.TAB 000001      D.ABORT 040141      D.CDE   040160      D.CON   040110  
  D.DLY   040235      D.DLYHS 040244      D.DLYMO 040243      D.DRVTB 040251  
  D.DTS   040163      D.DVCTL 040242      D.E.CHK 040267      D.E.HCK 040270  
  D.E.HSY 040266      D.E.MDS 040265      D.E.TRK 040272      D.E.VOL 040271  
  D.ERR   040265      D.ERRL  040273      D.ERRT  040232      D.ERTS  040126  
  D.HECNT 040261      D.LPS   040177      D.LPSA  040116      D.MAI   040171  
  D.MAIA  040115      D.MAO   040174      D.MOUNT 040133      D.OECNT 040264  
  D.OPR   040273      D.OPW   040275      D.RAM   040240      D.RAML  000037  
  D.RDB   040202      D.READ  040147      D.READR 040152      D.SDP   040205  
  D.SDPA  040117      D.SDPB  040120      D.SDT   040166      D.SECNT 040262  
  D.STS   040210      D.STSA  040121      D.STSB  040122      D.STZ   040213  
  D.SYDD  040130      D.TRKPT 040245      D.TS    040241      D.TT    040240  
  D.UDLY  040216      D.VEC   040130      D.VOLPT 040247      D.WHDA  040123  
  D.WNB   040227      D.WNHA  040124      D.WRITA 040112      D.WRITB 040113  
  D.WRITC 040114      D.WRITE 040155      D.WSC   040221      D.WSCA  040125  
  D.WSP   040224      D.XIT   040144      D.XITA  040110      D.XOK   040136  
  DC.ABT  000007      DC.CLO  000006      DC.MOU  000010      DC.OPR  000003  
  DC.OPU  000005      DC.OPW  000004      DC.REA  000000      DC.RER  000002  
  DC.WRI  000001      DCA     032002      DCA1    031377      DCA2    032035  
  DCA3    032055      DCA4    032071    U DD.ENT  000000      DDIAG   037262  
  DDIAG0  037306      DDIAG1  037314      DDIAG2  037347      DEV.DDA 000004  
  DEV.DIR 000016      DEV.DVG 000015      DEV.DVL 000013      DEV.FLG 000006  
  DEV.GRT 000007      DEV.GTS 000020      DEV.JMP 000003      DEV.MNU 000012  
  DEV.MUM 000012      DEV.NAM 000000      DEV.RES 000002      DEV.SPG 000011  
                                                  	HEATH XREF #104.06.00
SYMBOL TABLE                                      	19-Jan-83   PAGE   50

  DEVELEN 000022      DF.DI   000040      DF.DS1  000004      DF.DS2  000010  
  DF.DSO  000002      DF.HD   000001      DF.MO   000020      DF.SD   000010  
  DF.ST   000100      DF.T0   000002      DF.WG   000001      DF.WP   000004  
  DF.WR   000200      DIR.ALD 000024      DIR.CLU 000015      DIR.CRD 000022  
  DIR.EXT 000010      DIR.FGN 000020      DIR.FLG 000016      DIR.LGN 000021  
  DIR.NAM 000000      DIR.PRO 000013      DIR.VER 000014      DIRELEN 000026  
  DIRIDL  000015      DLY1    035310      DM.MR   000000      DM.MW   000001  
  DM.RR   000002      DM.RW   000003      DP.DC   000177      DR.IM   000001  
  DR.PR   000002      DREAD   031256      DT.CR   000002      DT.CW   000004  
  DT.DD   000001      DTS1    035177      DU661   030123      DU662   030143  
  DU663   030150      DU664   030163      DU665   030205      DWRITE  031253  
  EC.CNA  000004      EC.DDA  000027      EC.DIF  000017      EC.DIW  000035  
  EC.DNS  000005      EC.EOF  000001      EC.EOM  000002      EC.FAO  000031  
  EC.FAP  000026      EC.FL   000030      EC.FNF  000014      EC.FNO  000011  
  EC.FNR  000034      EC.FUC  000013      EC.ICN  000016      EC.IDN  000006  
  EC.IFC  000020      EC.IFN  000007      EC.ILC  000003      EC.ILO  000040  
  EC.ILR  000012      EC.ILV  000037      EC.IS   000032      EC.NEM  000021  
  EC.NRD  000010      EC.RF   000022      EC.UNA  000036      EC.UND  000015  
  EC.UUN  000033      EC.WF   000023      EC.WP   000025      EC.WPV  000024  
  EIXIT   034027      ERPTCNT 000012      ERR.FNO 031344      ERR.ILR 031350  
  FFB     032133      FFB4    032145      FFB5    032161      FFB6    032165  
  FFL     032205      I.CONFL 000004      I.CONTY 000001      I.CONWI 000003  
  I.CSLMD 000000      I.CUSOR 000002      IP.PAD  000360      LDD     032223  
  LDD2    032252      LDD3    032271      LDD4    032323      LDD8    032362  
  LDO     033012      LDO1    033073      LPS0    035316      LPS1    035334  
  LPS1.5  036007      LPS2    036014      LPS3    036025      LPS4    036032  
  LPS5    036037      M.FOX   000303      M.PAM8  000021      MEM1    030017  
  MEM2    030032      MEM3    030036      MEM4    030046      MI.CPI  000376  
  MOV1    030272      MOV2    030311      MU661   030344      MU662   030364  
  MU663   031005      MU860   031014      MU861   031015      MU862   031026  
  MU863   031044      OP.CTL  000360      OP.DIG  000360      OP.SEG  000361  
  OVL.IN  000001      OVL.RES 000002      OVL.UCS 000200      PCHL    032361  
  PDI     033145      PDI1    033161      PIC.COD 000006      PIC.ID  000000  
  PIC.LEN 000002      PIC.PTR 000004      R.ABORT 033366      R.CDE   035136  
  R.DLY   035303      R.DTS   035172      R.ERRT  037150      R.LPS   035321  
  R.MAI   035251      R.MAO   035254      R.MOUNT 033345      R.RDB   036044  
  R.READ  034077      R.READR 034321      R.SDP   036062      R.SDT   035225  
  R.STS   036165      R.STZ   036254      R.SYDD  033316      R.UDLY  036302  
  R.WNB   036373      R.WRITE 034336      R.WSC   036307      R.WSP   036343  
  R.XIT   033375      R.XOK   033374      READ1   034112      READ1.5 034122  
  READ2   034126      READ2.4 034130      READ3   034143      READ3.5 034160  
  READ4   034167      READ5   034205      READ6   034214      READ7   034300  
  READ71  034261      READ72  034272      READ8   034315      REL     033177  
  REL.    033175      REL1    033213      ROMBOOT 030000      RUC     033257  
  S.BAUD  040346      S.CAADR 040333      S.CACC  041011      S.CCTAB 040335  
  S.CDB   040345      S.CFWA  040352      S.CODE  041012      S.CONFL 040332  
  S.CONTY 040327      S.CONWI 040331      S.CSLMD 040326      S.CUSOR 040330  
  S.DATC  040310      S.DATE  040277      S.DCS   041033      S.DDDTA 040370  
  S.DDGRP 040364      S.DDLDA 040360      S.DDLEN 040362      S.DDOPC 040372  
  S.DDSEC 040364      S.DFWA  040354      S.DIREA 041021      S.DLINK 040350  
  S.FASER 041016      S.FCI   041024      S.GRT   024000      S.GRT1  025000  
  S.HIMEM 040316      S.INT   040345      S.JUMPS 041013      S.MOUNT 041032  
  S.OMAX  040324      S.OSN   041007      S.OVLE  041003      S.OVLFL 040374  
  S.OVLS  041001      S.OVSTK 041035      S.RFWA  040356      S.S1DIS 041037  
  S.S1GRT 041041      S.SCI   041027      S.SDD   041013      S.SOVR  041146  
  S.SSN   041005      S.SYSM  040320      S.TIME  040312      S.UCSF  040375  
  S.UCSL  040377      S.USRM  040322      S.VAL   040277      SDP1    036130  
                                                  	HEATH XREF #104.06.00
SYMBOL TABLE                                      	19-Jan-83   PAGE   51

  SDP2    036145      SDT1    035242      SDT3    035221      SECSCR  026000  
  SREAD   031275      SREAD1  031305      STACK   042200      STACKL  001032  
  START   030000      STS1    036201      STS2    036222      STS3    036233  
  STZ0    036251      SWRITE  031330      SYDD    040130      SYSCALL 000377  
  TFE     033233      UDD1    031163      UF.FCT  000100      UF.RDA  000001  
  UF.ROR  000002      UF.RPE  000004      UF.TBM  000200      UO.CLK  000001  
  UO.DDU  000002      UO.HLT  000200      UO.NFR  000100      UP.CLR  000376  
  UP.DP   000174      UP.EMP  000377      UP.FC   000175      UP.SC   000176  
  UP.SR   000176      UP.ST   000175      USERFWA 042200      WHD     036235  
  WNB1    036374      WNH     036271      WRIT2.5 034377      WRITE1  034370  
  WRITE2  034375      WRITE4  035016      WRITE5  035034      WRITE7  035122  
  WRITE8  035132      WSC1    036321      WSC2    036336      WSP1    036355  
  XIT1    033376      ZEROS   031320      ZRO1    031213    
                                                                                        	HEATH XREF #104.06.00
CROSS REFERENCE TABLE                             	19-Jan-83   PAGE   52

  $CDEHL  030216        565       585       744L
  $CHL    030224        759L     1579 
  $COMP   030060        605L      611 
  $DADA   030072        623L     1009      1118 
  $DADA.  030101        637L
  $DU66   030106        653L     1124 
  $HLIHL  030211        730L
  $INDL   030234        780L
  $MOVE   030252        815E     2556 
  $MU10   030324        869L
  $MU66   030337        890L
  $MU86   031007        932L
  $RSTALL 031047        968L     1533      1748 
  $SAVALL 031054        984L     1464      1747 
  $TBL1   031113       1064L     1070 
  $TBL2   031133       1066      1078L
  $TBLS   031111       1062L
  $TBRA   031076       1035E
  $TJMP   031061       1004L
  $TJMP.  031062       1006E
  $TYPTX  031136       1092L
  $TYPTX. 031144       1093      1097L     1102 
  $UDD    031157       1117E
  $WDR    031222       1162L
  $WDR1   031231       1166L     1182 
  $WER    031241       1178L
  $ZERO   031212       1148L     2561 
  .       036302       1818S     2196S     2261S     2262      2448S
  .ABUSS  040024         94E
  .ALARM  002136         67E
  .ALEDS  040013         92E
  .CHFLG  000060        141L
  .CLEAR  000055        138L
  .CLEARA 000056        139L
  .CLOSE  000046        131L
  .CLRCO  000007        120L
  .CONSL  000006        119L
  .CRC    002347         75E
  .CRCSUM 040027         95E
  .CTC    002172         69E
  .CTLC   000041        126L
  .CTLFLG 040011         91E
  .DECODE 000053        136L
  .DELET  000050        133L
  .DISMT  000061        142L
  .DLEDS  040021         93E
  .DLY    000053         64E
  .DOD    003122         78E
  .DODA   003356         80E
  .DSPMOD 040007         89E
  .DSPROT 040006         88E
  .DUMP   001374         66E
  .ERROR  000057        140L
  .EXIT   000000        113L
  .HORN   002140         68E
  .IDENT  000000         63E
  .IOWRK  040002         86E
                                                  	HEATH XREF #104.06.00
CROSS REFERENCE TABLE                             	19-Jan-83   PAGE   53

  .LINK   000040        125L
  .LOAD   001267         65E
  .MFLAG  040010         90E     2568 
  .NAME   000054        137L
  .OPENC  000045        130L
  .OPENR  000042        127L
  .OPENU  000044        129L
  .OPENW  000043        128L
  .PCHL   002264         71E
  .POSIT  000047        132L
  .PRINT  000003        116L
  .RCK    003260         79E
  .READ   000004        117L
  .REGI   040005         87E
  .REGPTR 040035         98E
  .RENAM  000051        134L
  .RNB    002331         74E
  .RNP    002325         73E
  .SCIN   000001        114L
  .SCOUT  000002        115L     1099 
  .SETTP  000052        135L
  .SRS    002265         72E
  .START  040000         85E
  .SYSRES 000010        121L
  .TICCNT 040033         97E     1842      2207      2383 
  .TPERR  002205         70E
  .TPERRX 040031         96E
  .UIVEC  040037         99E     2570      2582 
  .WNB    003024         77E
  .WNP    003017         76E
  .WRITE  000005        118L
  AIO.CGN 102116        528L     1302      1303      1321      1353      1436 
                       1440      1441      1650      1727 
  AIO.CHA 102164        543L
  AIO.CNT 102157        539L     1307      1338      1661 
  AIO.CSI 102117        529L     1303      1309      1326      1334      1441 
                       1650      1731 
  AIO.DDA 041046        524L
  AIO.DES 102124        533L
  AIO.DEV 102126        534L
  AIO.DIR 102131        537L     1411 
  AIO.DTA 102122        532L
  AIO.EOF 102161        541L     1306 
  AIO.EOM 102160        540L
  AIO.FLG 102112        525L
  AIO.GRT 102113        526L     1382      1435 
  AIO.LGN 102120        530L     1277      1280      1282      1319      1320 
                       1725      1726 
  AIO.LSI 102121        531L     1282      1320      1726 
  AIO.SPG 102115        527L     1311      1324      1651 
  AIO.TFP 102162        542L     1304      1649 
  AIO.UNI 102130        535L     1203      1218      1222      1226      1241 
                       1244      2313      2562 
  AIO.VEC 041043        523L
  BOOT    037014        547      2551L     2595 
  BOOT2   037060       2571L     2578 
  BOOT3   037075       2581L
                                                  	HEATH XREF #104.06.00
CROSS REFERENCE TABLE                             	19-Jan-83   PAGE   54

  BOOTA   037132       2554      2599E     2600      2603      2606      2609 
                       2612      2615      2618      2621      2624      2627 
                       2630      2633      2636      2668 
  BOOTAL  000130       2553      2668E
  C.DSYN  000375        224E     2478      2521 
  CB.CLI  000100         36E       49 
  CB.MTL  000040         35E
  CB.SPK  000200         37E
  CB.SSI  000020         34E
  CDB.H84 000001        457E
  CDB.H85 000000        456E
  CFF     031354       1272L
  CLOCK   034031       1842L     2581 
  CLOCK1  034070       1847      1850      1852      1857L
  CO.FLG  000001        438E
  CS.FLG  000200        439E
  CSL.CHR 000001        414E
  CSL.ECH 000200        412E
  CSL.WRP 000002        413E
  CTP.2SB 000010        422E
  CTP.BKM 000002        423E
  CTP.BKS 000200        419E
  CTP.MLI 000040        420E
  CTP.MLO 000020        421E
  CTP.TAB 000001        424E
  D.ABORT 040141        340L     1789 
  D.CDE   040160        345L     1972      2087 
  D.CON   040110        297L      314      2555      2600      2603      2606 
                       2609      2612      2615      2618      2621      2624 
                       2627      2630      2633      2636 
  D.DLY   040235        360L     2196      2399 
  D.DLYHS 040244        372L     1825      1835      1858      2233      2329 
                       2337 
  D.DLYMO 040243        371L     1834      1835      1846      1858      2337 
  D.DRVTB 040251        376L     2348 
  D.DTS   040163        346L     1897      2032 
  D.DVCTL 040242        370L     1164      1166      1180      1829      1832 
                       1853      1855      2064      2186      2320      2511 
  D.E.CHK 040267        385L     1969 
  D.E.HCK 040270        386L     2259 
  D.E.HSY 040266        384L     2273 
  D.E.MDS 040265        383L     1966 
  D.E.TRK 040272        388L     2279 
  D.E.VOL 040271        387L     2276 
  D.ERR   040265        382L     2260      2261 
  D.ERRL  040273        389L     2262 
  D.ERRT  040232        359L     1967      1970      2263 
  D.ERTS  040126        328L
  D.HECNT 040261        377L     2117 
  D.LPS   040177        350L     1903      2038 
  D.LPSA  040116        320L     2231      2615 
  D.MAI   040171        348L     2155 
  D.MAIA  040115        319L     2195      2612 
  D.MAO   040174        349L     2165      2428 
  D.MOUNT 040133        338L     1790 
  D.OECNT 040264        379L     2110      2312 
  D.OPR   040273        392L     1877      1879 
                                                  	HEATH XREF #104.06.00
CROSS REFERENCE TABLE                             	19-Jan-83   PAGE   55

  D.OPW   040275        393L     2008      2010 
  D.RAM   040240        300L      367       394      2559 
  D.RAML  000037        394E     2560 
  D.RDB   040202        351L     1924      1934      1938      2241      2245 
                       2250      2256 
  D.READ  040147        342L     1779 
  D.READR 040152        343L     1785 
  D.SDP   040205        352L     1806      1816      1876      1992      2007 
  D.SDPA  040117        321L     2334      2618 
  D.SDPB  040120        322L     2343      2621 
  D.SDT   040166        347L     1962      2083      2105 
  D.SECNT 040262        378L     2107      2109      2117 
  D.STS   040210        353L     2160      2229      2267 
  D.STSA  040121        323L     2390      2624 
  D.STSB  040122        324L     2398      2627 
  D.STZ   040213        354L     1807      1817      2104 
  D.SYDD  040130        337L
  D.TRKPT 040245        374L     2157      2351      2432 
  D.TS    040241        369L     1950      1958      2069      2078      2142 
                       2248 
  D.TT    040240        368L     1958      2078      2139      2158      2244 
                       2248 
  D.UDLY  040216        355L     1902      2036      2416 
  D.VEC   040130        299L      336 
  D.VOLPT 040247        375L     1808      1994      2240      2353 
  D.WHDA  040123        325L     2415      2630 
  D.WNB   040227        358L     2051      2056      2061      2062      2063 
                       2518      2523 
  D.WNHA  040124        326L     2447      2633 
  D.WRITA 040112        316L     2042      2603 
  D.WRITB 040113        317L     2045      2606 
  D.WRITC 040114        318L     2047      2609 
  D.WRITE 040155        344L     1782 
  D.WSC   040221        356L     1920      2238 
  D.WSCA  040125        327L     2481      2636      2700 
  D.WSP   040224        357L     2048 
  D.XIT   040144        341L     1977      2091 
  D.XITA  040110        315L     1833      2600 
  D.XOK   040136        339L     1787      1810      1981      2067 
  DC.ABT  000007        274L     1786      1788 
  DC.CLO  000006        273L
  DC.MOU  000010        275L     1788 
  DC.OPR  000003        270L
  DC.OPU  000005        272L
  DC.OPW  000004        271L
  DC.REA  000000        267L     1199      1221      1777 
  DC.RER  000002        269L     1783 
  DC.WRI  000001        268L     1196      1245      1780 
  DCA     032002       1302L
  DCA1    031377       1300L     1313 
  DCA2    032035       1315L     1359 
  DCA3    032055       1323      1325L
  DCA4    032071       1331      1333L
U DD.ENT  000000       1495 
  DDIAG   037262       2671E
  DDIAG0  037306       2680      2687L
  DDIAG1  037314       2689L     2694 
                                                  	HEATH XREF #104.06.00
CROSS REFERENCE TABLE                             	19-Jan-83   PAGE   56

  DDIAG2  037347       2704L     2710 
  DEV.DDA 000004        175L     1524 
  DEV.DIR 000016        187L
  DEV.DVG 000015        186L
  DEV.DVL 000013        185L
  DEV.FLG 000006        176L
  DEV.GRT 000007        181L
  DEV.GTS 000020        188L
  DEV.JMP 000003        174L
  DEV.MNU 000012        184L
  DEV.MUM 000012        183L
  DEV.NAM 000000        169L
  DEV.RES 000002        170L     1524 
  DEV.SPG 000011        182L
  DEVELEN 000022        190E
  DF.DI   000040        206E     2180      2187 
  DF.DS1  000004        202E     2318 
  DF.DS2  000010        203E     2672 
  DF.DSO  000002        201E     2317 
  DF.HD   000001        195E     2377      2388      2412      2444 
  DF.MO   000020        205E     1830      2324      2672 
  DF.SD   000010        198E     2484 
  DF.ST   000100        207E     2187      2191      2193 
  DF.T0   000002        196E     2430 
  DF.WG   000001        200E     2512      2672 
  DF.WP   000004        197E     2012 
  DF.WR   000200        208E     1165      1181      1830      1854      2322 
  DIR.ALD 000024        163L
  DIR.CLU 000015        157L     1411 
  DIR.CRD 000022        162L
  DIR.EXT 000010        152L
  DIR.FGN 000020        160L
  DIR.FLG 000016        158L
  DIR.LGN 000021        161L
  DIR.NAM 000000        151L
  DIR.PRO 000013        153L
  DIR.VER 000014        154L
  DIRELEN 000026        164E      537 
  DIRIDL  000015        155E
  DLY1    035310       2209L     2210 
  DM.MR   000000         40E
  DM.MW   000001         41E
  DM.RR   000002         42E
  DM.RW   000003         43E
  DP.DC   000177        194E     1167      1831      1856      2011      2065 
                       2189      2192      2194      2326      2376      2385 
                       2411      2429      2443      2483      2514      2563 
                       2673      2696 
  DR.IM   000001        171E     1520 
  DR.PR   000002        172E
  DREAD   031256       1198L
  DT.CR   000002        178E
  DT.CW   000004        179E
  DT.DD   000001        177E
  DTS1    035177       2136L     2138 
  DU661   030123        669L      678 
  DU662   030143        672       686L
                                                  	HEATH XREF #104.06.00
CROSS REFERENCE TABLE                             	19-Jan-83   PAGE   57

  DU663   030150        689L      715 
  DU664   030163        691       698L
  DU665   030205        662       716L
  DWRITE  031253       1196L
  EC.CNA  000004        233L
  EC.DDA  000027        252L
  EC.DIF  000017        244L
  EC.DIW  000035        258L
  EC.DNS  000005        234L
  EC.EOF  000001        230L     1735 
  EC.EOM  000002        231L
  EC.FAO  000031        254L
  EC.FAP  000026        251L
  EC.FL   000030        253L
  EC.FNF  000014        241L
  EC.FNO  000011        238L     1250 
  EC.FNR  000034        257L
  EC.FUC  000013        240L
  EC.ICN  000016        243L
  EC.IDN  000006        235L
  EC.IFC  000020        245L
  EC.IFN  000007        236L
  EC.ILC  000003        232L
  EC.ILO  000040        261L
  EC.ILR  000012        239L     1256 
  EC.ILV  000037        260L
  EC.IS   000032        255L
  EC.NEM  000021        246L
  EC.NRD  000010        237L
  EC.RF   000022        247L     1976 
  EC.UNA  000036        259L
  EC.UND  000015        242L
  EC.UUN  000033        256L
  EC.WF   000023        248L     2089 
  EC.WP   000025        250L     2014 
  EC.WPV  000024        249L
  EIXIT   034027       1837L     2573      2575 
  ERPTCNT 000012         17E     2114      2311 
  ERR.FNO 031344       1250L
  ERR.ILR 031350       1256L
  FFB     032133       1382L
  FFB4    032145       1392L     1399 
  FFB5    032161       1395      1405L
  FFB6    032165       1409L     1416 
  FFL     032205       1300      1356      1435L
  I.CONFL 000004        441E      442 
  I.CONTY 000001        426E      427 
  I.CONWI 000003        433E      434 
  I.CSLMD 000000        416E
  I.CUSOR 000002        430E      431 
  IP.PAD  000360         27E
  LDD     032223       1464L
  LDD2    032252       1482L     1489 
  LDD3    032271       1496L     1513 
  LDD4    032323       1502      1516L
  LDD8    032362       1482      1496      1498      1544L
  LDO     033012       1575L
                                                  	HEATH XREF #104.06.00
CROSS REFERENCE TABLE                             	19-Jan-83   PAGE   58

  LDO1    033073       1592      1608L
  LPS0    035316       2229L     2235 
  LPS1    035334       2237L     2269 
  LPS1.5  036007       2260L     2274      2277      2280 
  LPS2    036014       2252      2267L
  LPS3    036025       2239      2273L
  LPS4    036032       2243      2276L
  LPS5    036037       2247      2279L
  M.FOX   000303         59E
  M.PAM8  000021         58E
  MEM1    030017        563L      566 
  MEM2    030032        572L      587 
  MEM3    030036        575L      586 
  MEM4    030046        578       584L
  MI.CPI  000376         16E     1197      2181 
  MOV1    030272        833L      840 
  MOV2    030311        823       848L      855 
  MU661   030344        894L      912       916 
  MU662   030364        900       902       906L
  MU663   031005        908       918L
  MU860   031014        935L      948 
  MU861   031015        936L      946 
  MU862   031026        937       939       941L
  MU863   031044        942       950L
  OP.CTL  000360         28E
  OP.DIG  000360         29E
  OP.SEG  000361         30E
  OVL.IN  000001        477E     1469      1615      1755 
  OVL.RES 000002        478E
  OVL.UCS 000200        479E     1601      1753      1755 
  PCHL    032361       1532      1535L
  PDI     033145       1649L
  PDI1    033161       1658L     1660 
  PIC.COD 000006        285L     1619      1624 
  PIC.ID  000000        281L
  PIC.LEN 000002        283L
  PIC.PTR 000004        284L     1624 
  R.ABORT 033366       1815E     2586      2647 
  R.CDE   035136       2103L     2652 
  R.DLY   035303       2206L     2667      2676      2678 
  R.DTS   035172       2133L     2653 
  R.ERRT  037150       2640L     2666 
  R.LPS   035321       2231L     2657 
  R.MAI   035251       2180L     2655 
  R.MAO   035254       2183L     2656 
  R.MOUNT 033345       1803E     2645 
  R.RDB   036044       2290L     2293      2658      2704 
  R.READ  034077       1875L     2590      2649 
  R.READR 034321       1991L     2650 
  R.SDP   036062       2311L     2659 
  R.SDT   035225       2144      2157L     2166      2654 
  R.STS   036165       2374L     2660 
  R.STZ   036254       2429L     2661 
  R.SYDD  033316       1776E     2644 
  R.UDLY  036302       2448      2462L     2463      2662 
  R.WNB   036373       2534L     2665      2690 
  R.WRITE 034336       2005E     2651 
                                                  	HEATH XREF #104.06.00
CROSS REFERENCE TABLE                             	19-Jan-83   PAGE   59

  R.WSC   036307       2478L     2663      2701 
  R.WSP   036343       2507L     2508      2664 
  R.XIT   033375       1824L     2648 
  R.XOK   033374       1818      1823L     2646 
  READ1   034112       1886L     1995 
  READ1.5 034122       1890      1896L
  READ2   034126       1898L     1956      1963      1973 
  READ2.4 034130       1902L
  READ3   034143       1910L
  READ3.5 034160       1916      1919L
  READ4   034167       1924L     1928 
  READ5   034205       1934L     1936 
  READ6   034214       1931      1937L
  READ7   034300       1904      1968      1972L
  READ71  034261       1921      1966L
  READ72  034272       1940      1969L
  READ8   034315       1912      1945      1980L
  REL     033177       1679L     1708 
  REL.    033175       1631      1676L
  REL1    033213       1686      1695L
  ROMBOOT 030000        293E
  RUC     033257       1747L
  S.BAUD  040346        458L
  S.CAADR 040333        445L
  S.CACC  041011        490L
  S.CCTAB 040335        446L
  S.CDB   040345        455L
  S.CFWA  040352        463L
  S.CODE  041012        491L
  S.CONFL 040332        444L
  S.CONTY 040327        428L
  S.CONWI 040331        436L
  S.CSLMD 040326        417L      427       431       434       442 
  S.CUSOR 040330        432L
  S.DATC  040310        403L
  S.DATE  040277        402L
  S.DCS   041033        501L
  S.DDDTA 040370        473L     1518 
  S.DDGRP 040364        470L     1462 
  S.DDLDA 040360        468L     1476      1516      1530 
  S.DDLEN 040362        469L     1473 
  S.DDOPC 040372        474L     1531 
  S.DDSEC 040364       1462E     1554      1556 
  S.DFWA  040354        464L
  S.DIREA 041021        497L
  S.DLINK 040350        462L
  S.FASER 041016        496L     1205      1224 
  S.FCI   041024        498L
  S.GRT   024000        290E
  S.GRT1  025000        291E
  S.HIMEM 040316        405L
  S.INT   040345        302L      453 
  S.JUMPS 041013        494L
  S.MOUNT 041032        500L
  S.OMAX  040324        408L
  S.OSN   041007        487L     1611 
  S.OVLE  041003        485L     1623 
                                                  	HEATH XREF #104.06.00
CROSS REFERENCE TABLE                             	19-Jan-83   PAGE   60

  S.OVLFL 040374        481L     1467      1600      1613      1750 
  S.OVLS  041001        484L     1578      1608 
  S.OVSTK 041035        505L
  S.RFWA  040356        465L
  S.S1DIS 041037        508L
  S.S1GRT 041041        509L
  S.SCI   041027        499L
  S.SDD   041013        495L
  S.SOVR  041146        304L      306 
  S.SSN   041005        486L     1598      1763 
  S.SYSM  040320        406L     1581 
  S.TIME  040312        404L
  S.UCSF  040375        482L     1583      1618      1761 
  S.UCSL  040377        483L     1595      1758 
  S.USRM  040322        407L     1585 
  S.VAL   040277        301L      401 
  SDP1    036130       2333      2336L
  SDP2    036145       2342      2345L
  SDT1    035242       2164L
  SDT3    035221       2154L     2161 
  SECSCR  026000        292E     1479 
  SREAD   031275       1218L     1558      1612      1764 
  SREAD1  031305       1223L     1247 
  STACK   042200        307E     2552 
  STACKL  001032        306E
  START   030000        547L     2719 
  STS1    036201       2385L     2393 
  STS2    036222       2379      2389      2397L
  STS3    036233       2394      2400L
  STZ0    036251       2428L     2431 
  SWRITE  031330       1241L     1599 
  SYDD    040130        298E     1200      1223 
  SYSCALL 000377        109E     1099 
  TFE     033233       1305      1725L
  UDD1    031163       1121L     1134 
  UF.FCT  000100        220E
  UF.RDA  000001        217E     2291 
  UF.ROR  000002        218E
  UF.RPE  000004        219E
  UF.TBM  000200        221E     2537 
  UO.CLK  000001         51E     2566 
  UO.DDU  000002         50E
  UO.HLT  000200         48E
  UO.NFR  000100         49E
  UP.CLR  000376        149E
  UP.DP   000174        211E     2294      2494      2540 
  UP.EMP  000377        148E
  UP.FC   000175        212E
  UP.SC   000176        214E     2479 
  UP.SR   000176        215E     2480 
  UP.ST   000175        213E     2290      2535 
  USERFWA 042200        308E     2587      2591 
  WHD     036235       2411L     2414 
  WNB1    036374       2535L     2538 
  WNH     036271       2397      2443L     2446 
  WRIT2.5 034377       2036L     2075 
  WRITE1  034370       2027L
                                                  	HEATH XREF #104.06.00
CROSS REFERENCE TABLE                             	19-Jan-83   PAGE   61

  WRITE2  034375       2033L     2084      2088 
  WRITE4  035016       2043L     2044 
  WRITE5  035034       2050L     2054 
  WRITE7  035122       2040      2087L
  WRITE8  035132       2015      2090L
  WSC1    036321       2483L     2487 
  WSC2    036336       2485      2494L
  WSP1    036355       2517L     2520      2687 
  XIT1    033376       1825L     1827 
  ZEROS   031320       1230L     1993 
  ZRO1    031213       1149L     1152 


34512 Bytes Free
          